
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then v16=function(v21,v22,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==1) then v30=function(v40,v41,v42)if v42 then local v83=(v40/((1699 -(1058 + 639))^(v41-(2 -1))))%((1929 -(76 + 1851))^(((v42-(1 + 0)) -(v41-(1 + 0))) + 1 + 0)) ;return v83-(v83%(1 -(0 + 0))) ;else local v84=2^(v41-1) ;return (((v40%(v84 + v84))>=v84) and (1188 -(975 + 212))) or ((0 + 0) -0) ;end end;v31=nil;v31=function()local v48=v2(v21,v28,v28);v28=v28 + 1 ;return v48;end;v32=nil;v27=2;end if (v27==2) then v32=function()local v49,v50=v2(v21,v28,v28 + (7 -5) );v28=v28 + (1830 -(1494 + 334)) ;return (v50 * 256) + v49 ;end;v33=nil;v33=function()local v51=0 -0 ;local v52;local v53;local v54;local v55;while true do if (v51==(1 -0)) then return (v55 * (43844231 -27067015)) + (v54 * ((122439 -(39 + 1936)) -54928)) + (v53 * (431 -175)) + v52 ;end if (v51==(0 -(0 + 0))) then v52,v53,v54,v55=v2(v21,v28,v28 + (5 -2) );v28=v28 + (9 -(17 -12)) ;v51=1308 -(509 + 798) ;end end end;v34=nil;v27=3;end if (v27==4) then v37=nil;v37=function(...)return {...},v13("#",...);end;v38=nil;v38=function()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v56~=(3 + 1)) then else while true do if (v57~=1) then else local v105=0;while true do if (v105~=(919 -(128 + 790))) then else v57=2;break;end if (v105~=(0 -0)) then else v60=nil;v61=nil;v105=912 -(492 + 419) ;end end end if ((4 -2)==v57) then v62=nil;v63=nil;v57=1 + 2 ;end if (v57==0) then local v106=0;while true do if (v106~=1) then else v57=1;break;end if (v106==(1259 -(848 + 411))) then v58=0 -0 ;v59=nil;v106=1;end end end if (v57==3) then v64=nil;while true do if (2~=v58) then else local v107=0;while true do if (0==v107) then for v117=1,v63 do local v118=0;local v119;local v120;local v121;while true do if (v118~=(244 -(112 + 132))) then else local v129=0 + 0 ;while true do if (v129~=1) then else v118=1 -0 ;break;end if (v129~=0) then else v119=0 -0 ;v120=nil;v129=1 + 0 ;end end end if (v118==1) then v121=nil;while true do if (v119~=(1 + 0)) then else if (v120==(609 -(315 + 293))) then v121=v31()~=0 ;elseif (v120==2) then v121=v34();elseif (v120==3) then v121=v35();end v64[v117]=v121;break;end if (v119==0) then local v133=0 + 0 ;while true do if ((1998 -(511 + 1486))==v133) then v119=1 -0 ;break;end if (v133==(1714 -(1388 + 326))) then v120=v31();v121=nil;v133=1;end end end end break;end end end v62[8 -5 ]=v31();v107=1;end if ((1 + 0)==v107) then for v122=1 + 0 ,v33() do local v123=0 + 0 ;local v124;local v125;local v126;while true do if (v123==1) then v126=nil;while true do if (v124~=(0 -0)) then else local v134=0;while true do if ((889 -(197 + 692))==v134) then v125=0;v126=nil;v134=1;end if ((1960 -(512 + 1447))==v134) then v124=256 -(165 + 90) ;break;end end end if (v124~=1) then else while true do if (v125~=(222 -(5 + 217))) then else v126=v31();if (v30(v126,1 + 0 ,1)==0) then local v234=0 + 0 ;local v235;local v236;local v237;local v238;while true do if (v234==(1770 -(1575 + 193))) then while true do if (v235==(5 -3)) then if (v30(v237,63 -(54 + 8) ,1)==(443 -(206 + 236))) then v238[2]=v64[v238[2 -0 ]];end if (v30(v237,3 -1 ,131 -(18 + 111) )==1) then v238[14 -11 ]=v64[v238[8 -5 ]];end v235=800 -(681 + 116) ;end if (v235~=(1 + 0)) then else v238={v32(),v32(),nil,nil};if (v236==(0 -0)) then local v286=0 + 0 ;local v287;local v288;while true do if (v286~=(1635 -(916 + 718))) then else while true do if (v287==(0 + 0)) then v288=0 + 0 ;while true do if (v288~=(485 -(198 + 287))) then else v238[3]=v32();v238[4]=v32();break;end end break;end end break;end if (v286==0) then local v307=0 + 0 ;while true do if (v307==(1 + 0)) then v286=1;break;end if (0==v307) then v287=0;v288=nil;v307=1;end end end end elseif (v236==1) then v238[3 + 0 ]=v33();elseif (v236==(442 -(171 + 269))) then v238[3]=v33() -(2^(41 -25)) ;elseif (v236==(772 -(145 + 624))) then local v315=0 + 0 ;local v316;while true do if (v315==(990 -(117 + 873))) then v316=0 -0 ;while true do if (v316==0) then v238[3]=v33() -(2^16) ;v238[4]=v32();break;end end break;end end end v235=2 + 0 ;end if (v235~=0) then else local v278=0 + 0 ;while true do if (v278==(651 -(157 + 493))) then v235=1786 -(1526 + 259) ;break;end if (v278==0) then v236=v30(v126,2,3);v237=v30(v126,8 -4 ,8 -2 );v278=1;end end end if (v235~=(1222 -(1063 + 156))) then else if (v30(v237,3,2 + 1 )==(1867 -(833 + 1033))) then v238[4]=v64[v238[5 -1 ]];end v59[v122]=v238;break;end end break;end if (v234==(0 + 0)) then v235=0 + 0 ;v236=nil;v234=564 -(495 + 68) ;end if (v234==(1 -0)) then v237=nil;v238=nil;v234=711 -(408 + 301) ;end end end break;end end break;end end break;end if (v123~=(0 -0)) then else v124=0;v125=nil;v123=1;end end end v58=3;break;end end end if (v58~=(4 -3)) then else local v108=0;local v109;while true do if (v108==0) then v109=0;while true do if (v109~=0) then else local v127=0 + 0 ;while true do if (v127==(0 + 0)) then v62={v59,v60,nil,v61};v63=v33();v127=1;end if (1==v127) then v109=1;break;end end end if (1==v109) then v64={};v58=2;break;end end break;end end end if (v58~=3) then else for v112=1,v33() do v60[v112-(1839 -(665 + 1173)) ]=v38();end for v114=1,v33() do v61[v114]=v33();end return v62;end if ((0 + 0)==v58) then v59={};v60={};v61={};v58=1;end end break;end end break;end if (v56==2) then v61=nil;v62=nil;v56=3;end if (v56==1) then v59=nil;v60=nil;v56=2 + 0 ;end if (v56==(0 -0)) then v57=0;v58=nil;v56=1;end if (v56~=3) then else v63=nil;v64=nil;v56=8 -4 ;end end end;v27=5;end if (v27==0) then v28=1;v29=nil;v21=v5(v4(v21,5),"..",function(v43)if (v2(v43,2)==79) then v29=v1(v4(v43,1,1));return "";else local v85=v3(v1(v43,16));if v29 then local v100=v6(v85,v29);v29=nil;return v100;else return v85;end end end);v30=nil;v27=1;end if (5==v27) then v39=nil;v39=function(v44,v45,v46)local v65=v44[1];local v66=v44[2];local v67=v44[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v13("#",...) -1 ;local function v80()local v86=v65;local v87=v66;local v88=v67;local v89=v37;local v90={};local v91={};local v92={};for v96=0 -0 ,v79 do if ((v96>=v88) or (2379>=(6214 -(918 + 233 + 431)))) then v90[v96-v88 ]=v78[v96 + (4 -3) ];else v92[v96]=v78[v96 + 1 ];end end local v93=(v79-v88) + (1171 -(971 + 199)) ;local v94;local v95;while true do local v97=0 + (49 -(21 + 28)) ;local v98;while true do if (((1992 + 637)==(4531 -1902)) and (v97==0)) then v98=0 -0 ;while true do if ((v98==(1303 -(137 + 1166))) or ((1528 -519)==197)) then local v110=0 -0 ;local v111;while true do if (((1809 + 57)<(5223 -(230 + 475))) and (v110==0)) then v111=1643 -(250 + 1393) ;while true do if (((7443 -3100)>=3056) and (v111==1)) then v98=143 -(28 + 114) ;break;end if ((v111==(0 + (1010 -(131 + 879)))) or (2551<=(1819 -(275 + 976)))) then local v128=0;while true do if ((v128==((0 -0) -0)) or ((4120 -(428 + 1364 + 181))<(360 + 78))) then v94=v86[v76];v95=v94[1];v128=1;end if ((v128==1) or ((3083 + 1191)<=(9123 -5189))) then v111=930 -(917 + 12) ;break;end end end end break;end end end if ((v98==(1 + (0 -0))) or ((79 + 1604)==(4690 -2967))) then if ((v95<=(13 + (4 -2))) or ((5936 -(614 + 1000))<=(2245 -(307 + 775)))) then if ((v95<=(2 + 5)) or (1228>=2155)) then if ((v95<=(423 -(374 + 46))) or ((7125 -4511)==(2782 -(1577 + 318)))) then if (((14275 -9705)==(11983 -7413)) and (v95<=(1 -0))) then if ((v95==0) or (3559>(3919 + 400))) then local v135=0 -0 ;local v136;local v137;while true do if (((4847 -((30 -17) + 80))<=(22 + 4910)) and (v135==(0 -0))) then v136=v94[2];v137=v92[v136];v135=2 -1 ;end if (((706 + 2185)<=(2118 + 1008)) and ((1 + 0)==v135)) then for v227=v136 + 1 ,v94[9 -6 ] do v8(v137,v92[v227]);end break;end end else local v138=0 -0 ;local v139;while true do if (((2837 -(611 + 774))<=(6975 -4326)) and (v138==0)) then v139=v94[2];v92[v139]=v92[v139](v92[v139 + (1792 -(846 + 945)) ]);break;end end end elseif (((2838 -2118)==720) and (v95==(1905 -(1101 + 802)))) then local v140=898 -(167 + 243 + 488) ;local v141;local v142;while true do if ((v140==(1 + 0)) or ((13517 -9436)<(2442 + 78 + 412))) then while true do if (((1753 -(12 + 54))>=(1716 -522)) and (v141==(0 + 0))) then v142=v94[8 -(359 -(168 + 185)) ];v92[v142](v14(v92,v142 + 1 + 0 ,v94[3]));break;end end break;end if ((v140==((488 -(69 + 419)) -0)) or ((5559 -2529)>=(14240 -(23067 -13274)))) then local v217=0 -0 ;while true do if ((v217==(393 -(236 + 157))) or (594==(1026 + 1993))) then v141=1905 -(973 + 932) ;v142=nil;v217=1 + 0 ;end if (((4961 -(859 + 22))==(5146 -(157 + 183 + 726))) and (v217==(1002 -((2291 -1814) + 524)))) then v140=1;break;end end end end else v46[v94[322 -(43 + 115 + 161) ]]=v92[v94[406 -(14 + (729 -(38 + 301))) ]];end elseif ((2266<(12932 -8155)) and (v95<=(9 -4))) then if ((v95==(1789 -(399 + 1386))) or ((1462 -(51 + (5267 -3867)))==4034)) then if ((v92[v94[1702 -(476 + 1224) ]]==v94[4]) or ((13395 -9607)<((2038 -620) + 1273))) then v76=v76 + (1150 -(478 + 671)) ;else v76=v94[6 -3 ];end elseif (((3428 -(1347 + 74))<3148) and v92[v94[1232 -(759 + 471) ]]) then v76=v76 + 1 + 0 ;else v76=v94[3 + 0 ];end elseif ((v95>6) or (((15925 -6563) -6545)==(1467 -(39 + 498)))) then do return;end else v92[v94[1 + 1 ]]=v92[v94[(1339 -(670 + 171)) -(406 + 89) ]];end elseif ((v95<=((43 -17) -15)) or ((5572 -2265)<=2565)) then if ((v95<=9) or ((4164 -1350)<(2218 -(770 + 608)))) then if ((v95>(189 -(80 + 101))) or ((6245 -(676 + 757))<((6143 -(547 + 948)) -3077))) then v92[v94[2 + 0 ]]=v94[6 -3 ]~=((1529 -(97 + 1432)) + (612 -(70 + 542))) ;else local v148=1976 -(944 + 1032) ;local v149;local v150;local v151;local v152;local v153;local v154;while true do if ((((763 -(32 + 4)) -(120 + 120))==(1309 -822)) and (v148==(1 -0))) then v151=nil;v152=nil;v148=991 -(580 + 409) ;end if (((5699 -(800 + 671))>=(4145 -2110)) and (v148==(1 + 1))) then v153=nil;v154=nil;v148=3 + 0 ;end if ((4013==4013) and (v148==3)) then while true do if (((5008 -2399)<(3711 -(152 + 31))) and (v149==(505 -(456 + 47)))) then v154=nil;while true do if (((5218 -1246)<=(3120 + 1199)) and (v150==(1270 -(391 + 878)))) then local v256=1538 -(1450 + 88) ;local v257;while true do if (((33 + 81)==(348 -234)) and (v256==(0 + 0))) then v257=793 -(114 + 12 + 667) ;while true do if (((5383 -(320 + 120))>=(2851 + 494)) and (v257==(0 -0))) then v77=(v153 + v151) -1 ;v154=0;v257=1;end if (((12213 -8590)==(8385 -4762)) and ((555 -(339 + 215))==v257)) then v150=520 -(136 + 382) ;break;end end break;end end end if (((1439 -(444 + 534))==(1294 -(251 + 582))) and (v150==0)) then local v258=0 -0 ;local v259;while true do if ((v258==(929 -((136 -32) + 825))) or ((1435 -(132 + 862))==(3783 -(1105 + 400)))) then v259=0 -0 ;while true do if ((v259==(0 + 0 + 0)) or ((4859 -((443 -(21 + 40)) + 1184))<=(1762 -545))) then v151=v94[2];v152,v153=v89(v92[v151](v92[v151 + (574 -(377 + 196)) ]));v259=1 + 0 ;end if (((2983 -(178 + 635 + 242))<=(6241 -(6591 -4126))) and (v259==(85 -(41 + 43)))) then v150=1 + 0 ;break;end end break;end end end if ((v150==2) or ((904 + 1454)>(4249 -(723 + 79 + 31)))) then for v267=v151,v77 do local v268=1468 -(600 + 868) ;while true do if ((3447==(1975 + (1843 -(234 + 137)))) and (0==v268)) then v154=v154 + 1 ;v92[v267]=v152[v154];break;end end end break;end end break;end if (((2827 -(22 + 24))==(203 + 2578)) and (v149==(1712 -((3310 -1697) + 99)))) then local v240=0;while true do if (((911 + 42)<(3613 + 648)) and (v240==(2 -1))) then v149=4 -3 ;break;end if ((1073==(972 + 101)) and (v240==((0 -0) -0))) then v150=0 -0 ;v151=nil;v240=696 -(101 + (2469 -1875)) ;end end end if ((4347>(4946 -(980 + 99))) and ((112 -(81 + 30))==v149)) then v152=nil;v153=nil;v149=799 -(666 + 131) ;end end break;end if (((1744 + 2121)>=2570) and ((819 -((2434 -(654 + 975)) + 14))==v148)) then v149=1702 -(1021 + (1431 -(731 + 19))) ;v150=nil;v148=1 + 0 ;end end end elseif ((v95>(20 -10)) or (1773==2138)) then local v155=0;local v156;local v157;while true do if ((v155==(0 -0)) or ((319 + (2468 -555))<=588)) then local v218=0;while true do if ((v218==(0 -0)) or ((4891 -(402 + 128))<=(183 + 191 + 428))) then v156=(2263 -(101 + 540)) -((816 -464) + 1270) ;v157=nil;v218=1 + 0 ;end if (((4106 -(239 + 905))>=(722 + 265)) and (v218==(1 + 0))) then v155=1 + 0 ;break;end end end if (((21056 -16443)==(14781 -(2678 + 7490))) and (v155==(1 + 0))) then while true do if ((v156==(0 -0)) or ((5185 -1135)<(1343 -964))) then v157=v94[2 + 0 ];v92[v157]=v92[v157](v14(v92,v157 + 1 ,v77));break;end end break;end end else v92[v94[316 -((211 -68) + 171) ]]=v94[3];end elseif (((697 + 1702)>=(665 + 820)) and (v95<=(29 -16))) then if ((1842<=(39 + 3153)) and (v95>(42 -30))) then v92[v94[2 + 0 ]]=v39(v87[v94[3 + 0 ]],nil,v46);else local v161=(1452 -(1213 + 239)) + 0 ;local v162;local v163;local v164;while true do if (((1850 -(65 + 471))>=(1869 -(621 + 243))) and (v161==((150 + 1710) -(244 + 1616)))) then v162=0 + 0 ;v163=nil;v161=1 + 0 ;end if ((v161==(3 -2)) or ((985 -562)>=((1937 -(638 + 216)) -631))) then v164=nil;while true do if ((v162==((144 + 577) -(383 + (499 -(106 + 55))))) or (2937>=(5536 -2126))) then v163=v94[4 -2 ];v164=v92[v94[1304 -(801 + 500) ]];v162=1;end if (((1918 -(593 + (3835 -2709)))<=(3210 -(462 + 451))) and (v162==(2 -(1 + 0)))) then v92[v163 + 1 + 0 ]=v164;v92[v163]=v164[v94[19 -(4 + 11) ]];break;end end break;end end end elseif ((v95>(884 -(121 + 749))) or ((101 + 165)>=(1382 + (3879 -(594 + 167))))) then v92[v94[(3181 -1978) -(122 + 1079) ]][v94[805 -((284 -203) + (2490 -(1313 + 456))) ]]=v94[19 -15 ];else local v167=0 + 0 + 0 ;local v168;while true do if ((845<=(3224 -2358)) and (v167==(0 -0))) then v168=v94[237 -((1268 -(764 + 410)) + 141) ];v92[v168]=v92[v168]();break;end end end elseif (((1624 + 1877)==(1086 + 2415)) and (v95<=(17 + 6))) then if ((v95<=19) or (((7123 -(838 + 97)) -4024)>=4627)) then if ((v95<=(15 + 2)) or ((604 + 1125)==277)) then if ((v95==(56 -40)) or ((2256 + 674)>3634)) then for v208=v94[2],v94[719 -(433 + 283) ] do v92[v208]=nil;end else v92[v94[5 -3 ]]={};end elseif ((v95==(1022 -(45 + 959))) or ((5921 -2285)>(2155 + 2179))) then v76=v94[5 -2 ];else v92[v94[2]]=v45[v94[3]];end elseif ((v95<=(525 -(454 + 50))) or ((2148 + 949)==((3894 -(181 + 1282)) -(638 + 273)))) then if ((v95>(56 -36)) or ((5316 -(751 + 888))<(9640 -6839))) then if ( not v92[v94[2 + 0 ]] or (1424<(120 + 82 + 29))) then v76=v76 + 1 + 0 ;else v76=v94[3];end else local v173=1447 -(821 + 626) ;local v174;local v175;while true do if (((2451 + 2439)>(3999 -(1417 + 6))) and (v173==0)) then v174=v94[999 -(700 + 297) ];v175={};v173=4 -3 ;end if ((117<(3 + 212)) and (v173==(1 -0))) then for v228=3 -2 , #v91 do local v229=0 + 0 ;local v230;local v231;local v232;while true do if ((v229==(1817 -(252 + 1565))) or ((262 + 2574)<=(3737 -(15 + 1739)))) then v230=0 -0 ;v231=nil;v229=1 + 0 ;end if ((v229==1) or (202<=(217 -(16 + 85 + 79)))) then v232=nil;while true do if ((v230==(0 + 0)) or ((13439 -(17063 -7314))<=3051)) then local v269=868 -(457 + 411) ;while true do if (((9382 -6287)>(4892 -1848)) and (v269==1)) then v230=2 -1 ;break;end if ((v269==(1016 -((2713 -(1081 + 813)) + 197))) or (1578>(9529 -5300))) then v231=0;v232=nil;v269=185 -(24 + 160) ;end end end if ((v230==(2 -1)) or ((5463 -2304)==471)) then while true do if (((3886 -(8 + 8))==(4970 -1100)) and (v231==(793 -(645 + 148)))) then v232=v91[v228];for v294=0 -0 , #v232 do local v295=0;local v296;local v297;local v298;local v299;local v300;while true do if (((439 + 4225)>=((4680 -(697 + 368)) -(13 + 27))) and (2==v295)) then v300=nil;while true do if ((v296==(0 -0)) or ((3506 + 444)<=(523 + 2590))) then local v326=0 -0 ;while true do if (((4435 + 494)>(33 + 1110)) and (v326==(1568 -(1028 + 540)))) then v297=0 -0 ;v298=nil;v326=2 -1 ;end if (((9774 -6578)==(254 + (5987 -3045))) and (v326==(1 -0))) then v296=2 -1 ;break;end end end if (((155 + 165)<(8825 -5017)) and ((2 + 0)==v296)) then while true do if ((4189>=(2157 -(225 + 192))) and (v297==(1 -0))) then v300=v298[903 -(472 + 429) ];if (((6227 -2348)==3879) and (v299==v92) and (v300>=v174)) then local v337=0 + 0 ;while true do if ((v337==(0 -0)) or (3010>=(1663 + 1929))) then v175[v300]=v299[v300];v298[1]=v175;break;end end end break;end if ((v297==0) or ((3441 -(16 + 196))>=3520)) then local v333=0;local v334;while true do if (((1994 -(12 + 244))>=393) and (v333==(1128 -(200 + 928)))) then v334=0;while true do if ((v334==((10 + 1) -(5 + 6))) or ((4075 -(972 + 639 + 196))<(1935 + 18))) then local v345=0 -0 ;while true do if (((1829 -(892 + 316))<=(4448 -(291 + 464))) and (v345==(0 + 0))) then v298=v232[v294];v299=v298[1];v345=2 -1 ;end if ((v345==(1 + 0)) or (3525<(3645 -(431 + 1238)))) then v334=2 -1 ;break;end end end if ((v334==((1301 -(973 + 327)) + 0)) or ((7205 -5447)>=(2252 + 155))) then v297=1;break;end end break;end end end end break;end if (((1725 + 1007)==(6346 -(8037 -4423))) and (v296==(2 -1))) then local v327=0 + 0 ;while true do if ((((916 -(74 + 198)) -(102 + 7))<=(845 + 1307)) and (v327==(0 -0))) then v299=nil;v300=nil;v327=130 -(126 + 3) ;end if ((((39274 -21978) -13748)>=(3990 -(188 + 427))) and (v327==(1 + 0))) then v296=667 -(462 + 203) ;break;end end end end break;end if (((1056 + 2329)<4661) and (v295==(0 -0))) then v296=0 + 0 ;v297=nil;v295=1;end if (((1 + 0)==v295) or ((1245 -847)>=(2493 + (2807 -1620)))) then v298=nil;v299=nil;v295=2 + 0 ;end end end break;end end break;end end break;end end end break;end end end elseif (((7467 -4427)==(877 + 1596 + 567)) and (v95>22)) then local v176=0;local v177;local v178;local v179;local v180;local v181;while true do if (((31 -(20 + 10))==v176) or (1815>(4902 -(1032 + 143)))) then v179=nil;v180=nil;v176=2;end if ((v176==(1507 -((1640 -(375 + 84)) + 326))) or ((2218 -(169 + 82))==(2083 -851))) then v177=0 + 0 ;v178=nil;v176=656 -(160 + 495) ;end if ((((3604 -(59 + 12)) -((6433 -5125) + 400))<(132 + 2099)) and (v176==(4 -2))) then v181=nil;while true do if ((v177==(390 -((1166 -(426 + 481)) + 131))) or (((876 + 2195) -(1046 + 620))<=(1623 -(255 + 1350)))) then v178=0;v179=nil;v177=1864 -(1560 + (583 -280)) ;end if (((269 + (3147 -(1022 + 886)))<(2624 -783)) and (v177==(1 + 1))) then while true do if ((760<=(2832 + 1201)) and (v178==(1932 -(937 + 995)))) then local v260=1418 -(368 + 187 + 863) ;while true do if (((0 + 0)==v260) or ((9967 -6403)<=(1482 -862))) then local v280=1739 -(389 + 1350) ;while true do if (((12188 -8911)<=(7969 -4659)) and (v280==(0 + 0))) then v179=v94[5 -3 ];v180=v92[v179];v280=1 + 0 + 0 ;end if (((3292 -1035)>(791 + 1279)) and (v280==1)) then v260=(452 + 170) -(393 + 228) ;break;end end end if (((3 + 12)>(41 -27)) and (v260==(3 -2))) then v178=265 -(260 + 1 + 3) ;break;end end end if ((v178==1) or ((848 + 1639)>=(510 + 170 + 2414))) then v181=v94[6 -(2 + 1) ];for v270=1 -0 ,v181 do v180[v270]=v92[v179 + v270 ];end break;end end break;end if (((3361 -2624)>=(1208 -840)) and (v177==(1253 -(805 + 447)))) then local v248=0;while true do if ((884<=(4612 -3109)) and (v248==(0 + 0))) then v180=nil;v181=nil;v248=1;end if ((v248==(412 -(299 + 112))) or (((6344 -(334 + 351)) -3569)<=(1270 + 558))) then v177=2;break;end end end end break;end end else v92[v94[240 -(110 + (307 -179)) ]]();end elseif ((v95<=((416 -(199 + 129)) -61)) or ((806 -155)<=(4 + 93))) then if (((11630 -(8165 -(733 + 237)))<(6326 -((1492 -(527 + 298)) + 897))) and (v95<=(374 -(320 + 29)))) then if ((v95>24) or ((4523 -(432 + 369))>(11669 -6764))) then v92[v94[1 + 1 ]]=v46[v94[1721 -(152 + (3158 -1592)) ]];else local v184=0 -0 ;local v185;local v186;local v187;local v188;local v189;while true do if ((v184==(1 -0)) or (2957>(2750 + 1531))) then v187=nil;v188=nil;v184=1752 -(1282 + 468) ;end if (((2182 -(136 + 269 + 475))<=(3966 -(846 + 108))) and (v184==(1 + 1))) then v189=nil;while true do if ((v185==((0 + 0) -0)) or (4414==(2413 -(851 + 281)))) then v186=0;v187=nil;v185=91 -(29 + 61) ;end if (((478 + 3892)==(1462 + 1599 + 1309)) and (v185==(897 -((2180 -(32 + 1700)) + 447)))) then while true do if (((2818 + 466)>(1262 + (22 -7))) and (v186==(7 -5))) then for v273=1,v94[14 -(9 + 1 + 0) ] do local v274=0 + 0 ;local v275;local v276;local v277;while true do if ((v274==(0 + 0)) or ((2827 -(791 + 48))==(16270 -11571))) then v275=0 + 0 ;v276=nil;v274=(3 -2) -0 ;end if ((v274==(2 -1)) or ((3094 -(107 + 137))==(7730 -3963))) then v277=nil;while true do if (((3335 + 223 + 220)>=(2240 -(782 + 28))) and (v275==(2 -1))) then while true do if (((4120 -(700 + 661))>(178 + 1619)) and ((0 + 0)==v276)) then local v317=0 + 0 ;local v318;while true do if (((0 + 0)==v317) or (1292>(5872 -3297))) then v318=1270 -(105 + 1165) ;while true do if ((v318==1) or ((983 + 878)==((773 -533) + 2467))) then v276=1 + 0 ;break;end if (((717 + 20 + 32)==(366 + 403)) and (v318==0)) then v76=v76 + 1 ;v277=v86[v76];v318=1163 -(1066 + 96) ;end end break;end end end if (((4589 -(209 + 774))>(1779 -1217)) and (v276==(2 -1))) then if ((v277[3 -2 ]==(6 + 0)) or ((784 + 18)<=373)) then v189[v273-(765 -(700 + 13 + 51)) ]={v92,v277[3 + 0 + 0 ]};else v189[v273-(1688 -(974 + (2695 -(211 + 1771)))) ]={v45,v277[3]};end v91[ #v91 + ((4 -1) -2) ]=v189;break;end end break;end if (((2994 -1692)==(2966 -(925 + 739))) and (v275==(817 -(165 + 652)))) then local v308=0 + (1541 -(1287 + 254)) ;while true do if ((v308==(0 -0)) or ((4947 -(672 + 1263))<2694)) then v276=0 + 0 ;v277=nil;v308=348 -(333 + 14) ;end if ((v308==(3 -2)) or ((504 + 3994)<(3412 -(150 + 1483)))) then v275=1141 -(77 + 1063) ;break;end end end end break;end end end v92[v94[2 + 0 ]]=v39(v187,v188,v46);break;end if ((v186==((642 -(142 + 500)) + 0)) or ((9751 -5794)<=(3650 -(346 + 99 + 158)))) then local v263=0;while true do if ((2819>(1699 -656)) and (v263==(0 -0))) then local v281=0 + 0 ;while true do if ((119<=(11481 -8489)) and (v281==(0 -0))) then v187=v87[v94[8 -5 ]];v188=nil;v281=1 + 0 + 0 ;end if (((1470 + 3229)==(21937 -17238)) and (v281==1)) then v263=1 + 0 ;break;end end end if (((3749 -1055)>=(6684 -4878)) and (v263==(3 -2))) then v186=1;break;end end end if (((570 -(67 + 502))==v186) or ((42 + 10)>=(1833 -(75 + 3)))) then local v264=1266 -(60 + 1206) ;local v265;while true do if ((1870>=1820) and (v264==(1086 -((314 -181) + 953)))) then v265=0;while true do if ((v265==(342 -(103 + 238))) or ((25 + 1026)==(950 + 270))) then v186=749 -(458 + 289) ;break;end if ((v265==0) or (4503<=(2880 -(1205 + 455)))) then local v306=0 + 0 ;while true do if (((1426 -((3626 -2256) + 46 + 9))==v306) or ((3172 + 1630)<(994 -499))) then v265=3 -2 ;break;end if (((1704 -(417 + 831))<(1452 + 2781)) and (v306==0)) then v189={};v188=v11({},{__index=function(v312,v313)local v320=268 -(67 + 201) ;local v321;local v322;while true do if ((v320==(799 -(62 + 67 + 669))) or ((3028 -(84 + 307))<(1192 -(113 + 18 + 38)))) then while true do if ((v321==(0 + 0)) or ((6582 -4759)>(18917 -14515))) then v322=v189[v313];return v322[1 + 0 ][v322[1 + 1 ]];end end break;end if ((4627>2989) and (v320==(0 + 0))) then v321=0;v322=nil;v320=1;end end end,__newindex=function(v312,v313,v314)local v323=303 -(56 + 247) ;local v324;local v325;while true do if (((1248 + 2095)<(3280 + 832)) and (v323==(1 + 0))) then while true do if (((2616 -883)==(21 + 1712)) and (v324==0)) then v325=v189[v313];v325[1][v325[2]]=v314;break;end end break;end if ((v323==(841 -(606 + 235))) or ((5077 -2659)==555)) then v324=(4142 -2558) -(457 + 884 + 243) ;v325=nil;v323=1 + 0 ;end end end});v306=1;end end end end break;end end end end break;end if (((1295 + 335)<=(53 + 2962)) and (1==v185)) then v188=nil;v189=nil;v185=1 + 1 ;end end break;end if (((2296 -(338 + 608))==(1189 + 161)) and ((0 -0)==v184)) then v185=(3249 -(528 + 1396)) -(877 + 448) ;v186=nil;v184=1 -0 ;end end end elseif ((v95==(69 -43)) or ((2884 -(335 + 861))<(633 + 146))) then local v190=0;local v191;local v192;while true do if ((0==v190) or (2495>=3167)) then v191=0 + 0 ;v192=nil;v190=541 -(343 + (501 -304)) ;end if ((((4579 + 3015) -(6766 -(1491 + 496)))>(2614 -(337 + 676))) and (v190==(4 -3))) then while true do if (((5732 -(175 + 913))>(4191 -1570)) and (v191==(0 + 0))) then v192=v94[2 + 0 ];v92[v192](v92[v192 + (2 -1) ]);break;end end break;end end else v92[v94[2 -0 ]][v94[1 + 2 ]]=v92[v94[6 -2 ]];end elseif (((2549 + 1672 + 408)==(6380 -(1003 + 748))) and (v95<=(228 -(84 + 115)))) then if (((1573 -652)<=3264) and (v95==28)) then local v195=0 + 0 ;local v196;local v197;while true do if (((708 -338)<2329) and (v195==(1854 -(79 + 1745 + 30)))) then v196=v94[3];v197=v92[v196];v195=(304 -91) -(133 + 79) ;end if ((v195==((421 -(13 + 407)) + 0)) or ((5625 -(933 + 98))==(517 + 238))) then for v233=v196 + (1633 -(709 + 923)) ,v94[4] do v197=v197   .. v92[v233] ;end v92[v94[7 -5 ]]=v197;break;end end else local v198=0;local v199;local v200;local v201;local v202;local v203;while true do if ((((262 + 1653) -1276)==639) and (v198==(7 -5))) then v203=nil;while true do if (((255 + 3059)<=((12040 -6361) -(402 + 1594))) and (v199==0)) then local v250=0 + 0 ;while true do if (((1979 + 623)==(4340 -(481 + 1257))) and (0==v250)) then v200=v94[2 + 0 ];v201,v202=v89(v92[v200](v14(v92,v200 + (4 -3) ,v94[2 + 1 ])));v250=1 + 0 ;end if ((((7639 -3188) -2038)>=(1777 -1128)) and (v250==(882 -(268 + 613)))) then v199=1 + (0 -0) ;break;end end end if ((4297>=2940) and ((2 + 0)==v199)) then for v252=v200,v77 do local v253=0;local v254;local v255;while true do if (((2143 + 529)>(2512 -(1518 + 130))) and (v253==(1 -0))) then while true do if ((v254==0) or ((23 + 96)>(7843 -3068))) then v255=135 -(29 + 29 + 77) ;while true do if ((v255==(1539 -(1135 + 404))) or ((4979 -(355 + 579))<=136)) then v203=v203 + 1 ;v92[v252]=v201[v203];break;end end break;end end break;end if (((2021 -680)<=(2232 + 1757)) and (v253==0)) then v254=0;v255=nil;v253=(1 + 1) -1 ;end end end break;end if ((v199==(1 + 0)) or (3544>=(79 + 3615))) then local v251=0 -0 ;while true do if (((1354 + 1543)>=(1578 + 289)) and (v251==(2 -1))) then v199=5 -3 ;break;end if (((3205 -(723 + 904))==1578) and ((0 -(0 -0))==v251)) then v77=(v202 + v200) -(856 -(502 + 305 + 48)) ;v203=1336 -(635 + 701) ;v251=1 + 0 ;end end end end break;end if (((1424 -(283 + 1140))==v198) or ((1284 + 1281)==(342 + 199))) then v201=nil;v202=nil;v198=2 + 0 ;end if ((v198==((0 -0) -0)) or (((3804 -(47 + 1022)) -1982)==(883 -(349 + 109)))) then v199=0;v200=nil;v198=1;end end end elseif ((v95==(75 -45)) or (2073==(1115 -(167 + 303)))) then v92[v94[2 + 0 ]]=v92[v94[1 + 2 ]][v94[1 + 3 ]];else local v206=1291 -(557 + 734) ;local v207;while true do if ((2659<=(5514 -(552 + (3268 -2205)))) and (v206==(1258 -((466 -(137 + 61)) + 990)))) then v207=v94[1 + 1 ];v92[v207]=v92[v207](v14(v92,v207 + 1 + 0 ,v94[3 -0 ]));break;end end end v76=v76 + (3 -2) ;break;end end break;end end end end A,B=v37(v12(v80));if  not A[1] then local v99=v44[4][v76] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end;return v39(v38(),{},v22)(...);end if (v27==3) then v34=function()local v68=v33();local v69=v33();local v70=1 + 0 ;local v71=(v30(v69,3 -2 ,84 -64 ) * ((1 + 1)^(877 -(133 + 19 + 693)))) + v68 ;local v72=v30(v69,41 -20 ,31);local v73=((v30(v69,31 + 1 )==(1 -0)) and  -(1 -0)) or (2 -1) ;if (v72==(0 + 0)) then if (v71==(0 -0)) then return v73 * (533 -(389 + 144)) ;else v72=(3644 -(1345 + 317)) -(451 + 1530) ;v70=480 -(177 + 303) ;end elseif (v72==(3042 -(907 + 88))) then return ((v71==((0 -0) + 0)) and (v73 * ((1 + 0)/(1982 -((1856 -1255) + 1381))))) or (v73 * NaN) ;end return v9(v73,v72-((1647 -(183 + 325)) -(56 + 60)) ) * (v70 + (v71/(((1878 -(95 + 1781)) + 0)^(91 -39)))) ;end;v35=nil;v35=function(v47)local v74;if  not v47 then v47=v33();if (v47==0) then return "";end end v74=v4(v21,v28,(v28 + v47) -(1 + 0) );v28=v28 + v47 ;local v75={};for v81=1 + 0 , #v74 do v75[v81]=v3(v2(v4(v74,v81,v81)));end return v7(v75);end;v36=v33;v27=4;end end end;vv10(),...);break;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
