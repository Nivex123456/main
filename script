do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v73=0;local v74;while true do if (v73==0) then v74=v2(v0(v20,16));if v19 then local v98=v5(v74,v19);v19=nil;return v98;else return v74;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v75=1470 -(588 + 882) ;local v76;while true do if (v75==(0 + 0)) then v76=(v22/(2^(v23-(1 + 0))))%((7 -5)^(((v24-(222 -(168 + 53))) -(v23-(1 + 0))) + 1 + 0)) ;return v76-(v76%(1 + 0)) ;end end else local v77=2^(v23-((2 -1) + 0)) ;return (((v22%(v77 + v77))>=v77) and (3 -2)) or (0 -(0 -0)) ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (929 -(175 + 752)) );v18=v18 + (837 -(566 + 269)) ;return (v40 * (648 -(286 + 106))) + v39 ;end local function v27()local v41=0 + 0 ;local v42;local v43;local v44;local v45;while true do if (v41==1) then return (v45 * 16777216) + (v44 * (204461 -138925)) + (v43 * (851 -(1 + 245 + 349))) + v42 ;end if (v41==(0 -0)) then v42,v43,v44,v45=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (1392 -(183 + 1205)) ;v41=2 -1 ;end end end local function v28()local v46=v27();local v47=v27();local v48=1;local v49=(v21(v47,1,10 + 10 ) * ((1 + 1)^(1117 -(255 + 830)))) + v46 ;local v50=v21(v47,1 + 3 + 17 ,110 -79 );local v51=((v21(v47,747 -(658 + 57) )==(1 + 0 + 0)) and  -(2 -(1 + 0))) or (1484 -(1384 + 99)) ;if (v50==(1727 -(1028 + 665 + 34))) then if (v49==(0 + 0)) then return v51 * (0 + 0) ;else v50=966 -(492 + 473) ;v48=1183 -(478 + 705) ;end elseif (v50==2047) then return ((v49==(1572 -(594 + (1459 -(396 + 85))))) and (v51 * (1/(0 + 0)))) or (v51 * NaN) ;end return v8(v51,v50-(1782 -(543 + 216)) ) * (v48 + (v49/((5 -3)^(7 + 45)))) ;end local function v29(v30)local v52=0 + 0 ;local v53;local v54;while true do if ((720 -(131 + 127 + 462))==v52) then v53=nil;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v52=2 -1 ;end if (v52==(1 -0)) then v53=v3(v16,v18,(v18 + v30) -(1880 -(185 + 1694)) );v18=v18 + v30 ;v52=2 + 0 ;end if (v52==3) then return v6(v54);end if (v52==((1724 -(540 + 373)) -(725 + 84))) then v54={};for v78=1305 -(524 + 780) , #v53 do v54[v78]=v2(v1(v3(v53,v78,v78)));end v52=(2 + 1) -0 ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 -0 ;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v55~=(2 + 0)) then else v60=nil;v61=nil;v55=1059 -(513 + 543) ;end if (v55==(19 -15)) then while true do if (2==v56) then local v90=0 + 0 ;local v91;while true do if (v90==(0 + 0)) then v91=636 -(571 + 65) ;while true do if (v91==(0 + 0)) then local v108=0 + 0 ;while true do if (v108~=1) then else v91=2 -1 ;break;end if (v108==0) then v61=nil;v62=nil;v108=1;end end end if (1==v91) then v56=165 -(89 + 73) ;break;end end break;end end end if (v56==(0 + 0)) then local v92=0 -0 ;while true do if (v92==(1633 -(1112 + 520))) then v56=1;break;end if (v92~=(0 -0)) then else local v105=0 -0 ;while true do if (v105==0) then v57=0;v58=nil;v105=1;end if (v105==(1 + 0)) then v92=1 + 0 ;break;end end end end end if (v56==(2 + 1)) then v63=nil;while true do local v99=0 + 0 ;local v100;while true do if (v99~=0) then else v100=0 -0 ;while true do if (v100==0) then local v109=1962 -(460 + 1502) ;while true do if (0==v109) then local v113=0 -0 ;while true do if (v113==1) then v109=1;break;end if ((0 -0)==v113) then if (v57==1) then local v177=0 -0 ;local v178;while true do if ((1145 -(961 + 184))==v177) then v178=0;while true do if (v178==(2 + 0)) then v57=2;break;end if (1==v178) then local v235=0;while true do if (0==v235) then for v268=1,v62 do local v269=0;local v270;local v271;local v272;local v273;local v274;while true do if (v269~=(599 -(284 + 315))) then else v270=0;v271=nil;v269=2 -1 ;end if (v269~=(1 + 0)) then else v272=nil;v273=nil;v269=2;end if (v269~=(171 -(73 + 96))) then else v274=nil;while true do if (v270==(0 + 0)) then v271=0 -0 ;v272=nil;v270=1;end if (v270==(1 + 0)) then v273=nil;v274=nil;v270=2 + 0 ;end if ((2 + 0)~=v270) then else while true do if (v271==1) then v274=nil;while true do if (1==v272) then if (v273==(1 + 0)) then v274=v25()~=0 ;elseif (v273==(3 -1)) then v274=v28();elseif (v273==3) then v274=v29();end v63[v268]=v274;break;end if (v272==0) then local v322=0;while true do if (v322~=1) then else v272=388 -(211 + 176) ;break;end if (v322~=(0 -0)) then else local v328=0;while true do if ((0 -0)==v328) then v273=v25();v274=nil;v328=1 + 0 ;end if (v328==1) then v322=1;break;end end end end end end break;end if (v271~=0) then else v272=0 + 0 ;v273=nil;v271=1;end end break;end end break;end end end v61[1731 -(801 + 927) ]=v25();v235=205 -(110 + 94) ;end if (v235==1) then v178=739 -(375 + 362) ;break;end end end if (v178==(0 + 0)) then v62=v27();v63={};v178=829 -(454 + 374) ;end end break;end end end if (v57==(1 + 1)) then local v179=0 -0 ;local v180;while true do if (v179==0) then v180=1193 -(1100 + 93) ;while true do local v213=1719 -(1552 + 167) ;while true do if (v213==(589 -(498 + 91))) then if (v180==0) then for v275=1947 -(1239 + 707) ,v27() do local v276=730 -(246 + 484) ;local v277;local v278;while true do if (1==v276) then while true do if ((0 + 0)~=v277) then else v278=v25();if (v21(v278,1 + 0 ,1)==(0 -0)) then local v303=0;local v304;local v305;local v306;local v307;while true do if ((1718 -(882 + 835))==v303) then v306=nil;v307=nil;v303=2;end if (v303~=0) then else v304=0;v305=nil;v303=1 + 0 ;end if (v303==2) then while true do if (v304~=0) then else local v324=0 + 0 ;while true do if (v324==(0 + 0)) then local v339=0 + 0 ;while true do if (v339==(1035 -(209 + 825))) then v324=1;break;end if (v339~=0) then else v305=v21(v278,1 + 1 ,926 -(480 + 443) );v306=v21(v278,4,814 -(657 + 151) );v339=1816 -(1243 + 572) ;end end end if (v324==(1968 -(425 + 1542))) then v304=295 -(156 + 138) ;break;end end end if (v304~=(1 -0)) then else local v325=0;while true do if ((1 + 0)==v325) then v304=1 + 1 ;break;end if (v325~=0) then else v307={v26(),v26(),nil,nil};if (v305==(0 -0)) then local v340=0;local v341;local v342;while true do if (v340~=(0 -0)) then else v341=0;v342=nil;v340=1;end if (v340==1) then while true do if (v341~=(0 -0)) then else v342=0;while true do if (v342==0) then v307[246 -(159 + 84) ]=v26();v307[4]=v26();break;end end break;end end break;end end elseif (v305==(1893 -(18 + 1874))) then v307[2 + 1 ]=v27();elseif (v305==2) then v307[3]=v27() -(2^(37 -21)) ;elseif (v305==(1849 -(646 + 1200))) then local v351=0;local v352;local v353;while true do if (v351==(1 + 0)) then while true do if (v352==(1944 -(743 + 1201))) then v353=0 + 0 ;while true do if ((1324 -(330 + 994))==v353) then v307[3]=v27() -((1 + 1)^(5 + 11)) ;v307[3 + 1 ]=v26();break;end end break;end end break;end if (v351~=0) then else v352=0 + 0 ;v353=nil;v351=1;end end end v325=1;end end end if (v304==2) then local v326=0;while true do if (v326==(1 + 0)) then v304=3;break;end if ((0 + 0)==v326) then if (v21(v306,1726 -(490 + 1235) ,1594 -(563 + 1030) )==(1666 -(1381 + 284))) then v307[634 -(96 + 536) ]=v63[v307[973 -(211 + 760) ]];end if (v21(v306,2,6 -4 )==1) then v307[3]=v63[v307[12 -9 ]];end v326=1 + 0 ;end end end if (v304==(12 -9)) then if (v21(v306,14 -11 ,2 + 1 )==(3 -2)) then v307[328 -(45 + 279) ]=v63[v307[4]];end v58[v275]=v307;break;end end break;end end end break;end end break;end if (v276~=0) then else v277=0;v278=nil;v276=1;end end end for v279=605 -(274 + 330) ,v27() do v59[v279-(1 + 0) ]=v33();end v180=3 -2 ;end if (v180~=(2 -1)) then else local v253=0;local v254;while true do if (v253~=(0 -0)) then else v254=0;while true do if (v254~=0) then else for v294=1 + 0 ,v27() do v60[v294]=v27();end return v61;end end break;end end end break;end end end break;end end end v113=1 + 0 ;end end end if (v109~=1) then else v100=1;break;end end end if (v100==(1 + 0)) then if (v57==(0 + 0)) then local v110=0 -0 ;local v111;local v112;while true do if (v110~=0) then else v111=0;v112=nil;v110=1 -0 ;end if (1==v110) then while true do if (v111==(1411 -(1331 + 80))) then v112=0 -0 ;while true do if (v112~=2) then else v57=695 -(190 + 504) ;break;end if (v112~=1) then else local v207=0 -0 ;local v208;while true do if (v207~=0) then else v208=0 + 0 ;while true do if (v208==(1251 -(142 + 1108))) then v112=1149 -(90 + 1057) ;break;end if (v208~=0) then else local v255=0;while true do if (v255==0) then v60={};v61={v58,v59,nil,v60};v255=1;end if (v255==(1 + 0)) then v208=1;break;end end end end break;end end end if (v112==(0 + 0)) then local v209=0;local v210;while true do if (v209~=0) then else v210=0;while true do if (0==v210) then local v256=0;while true do if (v256~=(1119 -(544 + 574))) then else v210=1;break;end if (0==v256) then v58={};v59={};v256=1;end end end if ((969 -(530 + 438))==v210) then v112=1 + 0 ;break;end end break;end end end end break;end end break;end end end break;end end break;end end end break;end if (v56==1) then local v93=0;while true do if (v93==(1383 -(1012 + 370))) then v56=1 + 1 ;break;end if ((0 -0)==v93) then v59=nil;v60=nil;v93=569 -(386 + 182) ;end end end end break;end if (v55==(1 + 0)) then v58=nil;v59=nil;v55=2;end if (v55~=0) then else v56=0 + 0 ;v57=nil;v55=3 -2 ;end if (v55~=3) then else v62=nil;v63=nil;v55=8 -4 ;end end end local function v34(v35,v36,v37)local v64=v35[1];local v65=v35[2];local v66=v35[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==2) then v72=nil;v72=function()local v80=v64;local v81=v65;local v82=v66;local v83=v32;local v84={};local v85={};local v86={};for v94=1588 -(1077 + 511) ,v71 do if ((v94>=v82) or ((5783 -(1840 + 13 + 50))>(4634 -(158 + 369)))) then v84[v94-v82 ]=v70[v94 + 1 ];else v86[v94]=v70[v94 + (853 -(642 + 210)) ];end end local v87=(v71-v82) + (374 -(134 + 239)) + 0 ;local v88;local v89;while true do local v95=0 + 0 ;while true do if ((((2226 -1443) + 19)>=(78 + 113)) and (v95==((374 + 180) -(28 + 525)))) then if ((v89<=(19 -4)) or ((383 + (5612 -2728))>=(4047 -(13 + 17)))) then if ((v89<=(1253 -(367 + 404 + 475))) or ((6375 -(773 + 967))<=((1639 + 309) -(1240 + 496)))) then if (((11790 -(18702 -11901))>(2869 -(351 + 1040))) and (v89<=(6 -(523 -(493 + 27))))) then if ((v89<=(2 -1)) or (((10630 -(815 + 44)) -6435)==(3885 -(167 + 369)))) then if ((v89>(0 + 0)) or ((3503 -1285)>=(26 + 4044))) then v86[v88[461 -(24 + 435) ]]=v88[3];else v86[v88[1831 -(188 + 1641) ]]=v86[v88[1 + (785 -(552 + 231)) ]];end elseif (((1003 + 3500)>(1822 + 1560)) and (v89>(1459 -((2614 -1752) + (2141 -(601 + 945)))))) then local v118=0 -0 ;local v119;local v120;local v121;while true do if ((v118==(1571 -(836 + 735))) or ((437 + 301)>(2745 + 1233))) then v119=0 -0 ;v120=nil;v118=4 -3 ;end if (((141 + (4124 -(336 + 468)))==(1345 + 2116)) and (v118==((2069 -(38 + 1243)) -(661 + 126)))) then v121=nil;while true do if ((v119==0) or ((127 + 1155 + 708)==(3309 -(119 + 444)))) then local v214=0 -0 ;while true do if (((3638 -(564 + 84))>=(371 + 658)) and (v214==(769 -(336 + 433)))) then v120=v88[933 -(106 + (2869 -2044)) ];v121=v86[v88[1581 -(178 + 1400) ]];v214=1124 -(1003 + 120) ;end if (((165 + 875 + 2354)>(3180 -(1012 + 19))) and (v214==(1 + 0))) then v119=3 -2 ;break;end end end if ((v119==(1 -0)) or ((8142 -5912)>=(4738 -(972 + 977)))) then v86[v120 + (322 -((1193 -(244 + 668)) + 40)) ]=v121;v86[v120]=v121[v88[2 + 2 ]];break;end end break;end end else v86[v88[2]]=v88[2 + 1 ]~=((146 -(6 + 140)) + 0) ;end elseif (((566 + 219)<(781 + 2175)) and (v89<=(1 + 1 + 3))) then if ((v89==(7 -3)) or ((2865 + 552)<=(2891 -(507 + 71)))) then local v123=561 -(350 + (1440 -(242 + 987))) ;local v124;local v125;while true do if (((865 + 832)<=(9263 -4770)) and (v123==(1 -0))) then while true do if (((965 -(29 + 55))==(1747 -866)) and (v124==0)) then v125=v88[1 + 1 ];v86[v125]=v86[v125]();break;end end break;end if (((3396 -(102 + 69))<=(6368 -(1277 + 501))) and (v123==(264 -(90 + 174)))) then local v194=0 + 0 ;while true do if (((1242 -(350 + 726))<(168 + 806)) and (v194==(1 + 0))) then v123=1 + 0 ;break;end if ((v194==(1313 -(244 + 1069))) or ((222 + 3340)>=(12301 -8288))) then v124=0 + 0 ;v125=nil;v194=1 + 0 ;end end end end else local v126=0;local v127;local v128;local v129;local v130;local v131;local v132;while true do if ((v126==(2 -(1 -0))) or ((4682 -(48 + 995))<=(898 + 247 + 13))) then v129=nil;v130=nil;v126=4 -2 ;end if ((v126==(0 + 0)) or (3006<(153 + (1103 -(783 + 64))))) then v127=0 -(0 -0) ;v128=nil;v126=(3 -2) + 0 ;end if ((v126==(1999 -(1803 + 194))) or ((4642 -(1230 + 235))>((17308 -(1521 + 225)) -12317))) then v131=nil;v132=nil;v126=292 -(224 + 4 + 61) ;end if (((6846 -4067)<4217) and (v126==(10 -7))) then while true do if ((((6006 -(72 + 57)) -(785 + 240))==(3797 + 1055)) and (v127==(1562 -(765 + (2212 -1416))))) then v130=nil;v131=nil;v127=1601 -(1301 + 298) ;end if ((v127==((2071 -(518 + 36)) -(1364 + 151))) or ((2903 -(43 + 1055))<(946 -529))) then v132=nil;while true do if ((v128==(1364 -(157 + 1207))) or ((770 -458)==(564 + 1651))) then local v244=0 -0 ;local v245;while true do if (((917 + 242)<=(2441 -1075)) and (v244==(0 + 0))) then v245=0 + (157 -(105 + 52)) ;while true do if (((1821 -(159 + 517 + 183))==(2594 -(1170 + 462))) and (v245==(482 -((1145 -(83 + 583)) + 2)))) then v128=1 + 0 ;break;end if (((0 -0)==v245) or ((14620 -11335)<=(370 + (2890 -712)))) then local v285=0 + 0 ;while true do if ((v285==(0 -(688 -(626 + 62)))) or ((3678 -(477 + 335))<=(1494 + 103))) then v129=v88[1070 -(1061 + 7) ];v130,v131=v83(v86[v129](v13(v86,v129 + (2 -1) ,v88[(3 + 7) -7 ])));v285=1 + 0 ;end if ((v285==((3 -2) -0)) or ((2688 -(512 + 372))>(4 + 2985))) then v245=2 -1 ;break;end end end end break;end end end if (((5687 -(233 + 461))>=(125 + 422)) and (v128==2)) then for v248=v129,v69 do local v249=110 -(93 + 17) ;local v250;while true do if (((2740 -(1259 + 162))>1305) and (v249==(636 -(163 + 473)))) then v250=0 + 0 ;while true do if (((0 -(0 + 0))==v250) or ((1929 + 495)==(837 + 1512))) then v132=v132 + (1024 -(17 + 1006)) ;v86[v248]=v130[v132];break;end end break;end end end break;end if ((v128==(2 -1)) or ((2289 + 1818)<(5015 -(1837 + 16)))) then local v246=0 -0 ;local v247;while true do if (((3075 + (183 -111))>=(3715 -(1104 + 58))) and (v246==(0 -0))) then v247=0 -0 ;while true do if (((558 -380)==(1185 -((760 -(338 + 39)) + 624))) and (v247==(1 + 0))) then v128=2 -(0 + 0) ;break;end if (((0 -(0 -0))==v247) or ((3247 -(1406 + 398))>(3583 -(713 + 321)))) then v69=(v131 + v129) -((788 + 115) -(812 + 71 + 19)) ;v132=0 + 0 + 0 ;v247=1812 -(1115 + 696) ;end end break;end end end end break;end if (((732 -(1673 -1153))==(647 -435)) and (v127==(1966 -(1597 + 369)))) then local v220=0 -0 ;while true do if (((708 + 201)<=(5135 -(1379 + 413))) and (v220==(137 -(66 + (307 -237))))) then v127=1713 -(386 + 576 + 750) ;break;end if (((4550 -2518)>=(333 -245)) and (v220==(0 -0))) then v128=0 + (0 -0) ;v129=nil;v220=1;end end end end break;end end end elseif (((921 -(53 + 208 + (217 -108)))<(326 + 397)) and (v89==(12 -6))) then local v133=0 + 0 ;local v134;local v135;while true do if ((v133==((1 -0) + (0 -0))) or ((369 + 3114)<=(3709 -(73 + 381)))) then for v202=1623 -(616 + 1006) , #v85 do local v203=0 + 0 ;local v204;local v205;while true do if ((v203==(1983 -(829 + 1154))) or ((468 + 2015)<=(38 + 472))) then v204=0 + 0 + 0 ;v205=nil;v203=1 + 0 ;end if (((2184 + 164)>(4267 -(3229 -(20 + 97)))) and (v203==((1 -0) -0))) then while true do if (((3620 + 255)>=(174 + 442)) and (v204==(0 -0))) then v205=v85[v202];for v257=1608 -(884 + 724) , #v205 do local v258=0 -0 ;local v259;local v260;local v261;local v262;while true do if (((6225 -(3000 + 1052))>=(1189 + 404)) and (v258==(1 + 1))) then while true do if (((105 + (5033 -(1427 + 373)))==((423 + 7128) -4213)) and (v259==(0 -0))) then local v288=0 + 0 ;while true do if ((v288==(1 + 0)) or ((7983 -4234)<(9097 -5911))) then v259=(1428 + 251) -(1132 + 546) ;break;end if ((v288==(0 -0)) or ((39 + 2623)>(7682 -3241))) then v260=v205[v257];v261=v260[(499 -(473 + 25)) + 0 ];v288=421 -(289 + 131) ;end end end if ((v259==(1 + 0)) or ((9591 -6210)<=(214 + (1016 -664)))) then v262=v260[2 -0 ];if (((v261==v86) and (v262>=v134)) or ((1561 + 780)==(17523 -(13723 -(270 + 80))))) then local v300=560 -(105 + 455) ;local v301;local v302;while true do if (((6154 -(93 + 1358))>=(978 + 1168)) and ((0 -0)==v300)) then v301=0 + 0 ;v302=nil;v300=1538 -(1268 + 269) ;end if (((4409 -((275 -171) + 323))==(5722 -(605 + (1668 -(18 + 515))))) and ((1133 -(467 + 665))==v300)) then while true do if (((0 -(0 + 0))==v301) or ((1648 + 2109)==(2620 -1153))) then v302=935 -(27 + 5 + 903) ;while true do if ((v302==(0 -0)) or ((30 + 33)>((885 + 82) -(259 + 148)))) then v135[v262]=v261[v262];v260[1 + 0 ]=v135;break;end end break;end end break;end end end break;end end break;end if ((v258==((1005 -657) -(120 + 227))) or ((4552 -(230 + (2632 -(1572 + 364))))<=(1118 -((170 -95) + 90)))) then v261=nil;v262=nil;v258=4 -2 ;end if (((2522 + 344)>(2934 -(87 + 907))) and (v258==0)) then v259=(1268 -(443 + 825)) -(1455 -(671 + 784)) ;v260=nil;v258=2 -1 ;end end end break;end end break;end end end break;end if (((1885 + 249)<(5162 -(152 + 61))) and ((332 -(86 + (836 -590)))==v133)) then v134=v88[1840 -(757 + 1081) ];v135={};v133=569 -(520 + 48) ;end end else local v136=950 -(218 + 294 + 438) ;local v137;local v138;while true do if ((v136==(0 -0)) or ((10746 -6871)<(2053 -1493))) then v137=0 + 0 ;v138=nil;v136=1 + 0 ;end if ((v136==(1279 -(464 + 814))) or ((2230 + 1406)>=(9042 -4190))) then while true do if (((354 + 1436)<((2029 -(853 + 851)) + 2193)) and (v137==0)) then v138=v88[3 -1 ];v86[v138](v86[v138 + (2 -(1 + 0)) ]);break;end end break;end end end elseif ((v89<=(30 -19)) or ((3042 + 68 + 665)==(1710 -(387 + 157)))) then if ((v89<=9) or ((9 + 262)>=(379 + 126))) then if ((v89>(59 -(23 + 28))) or ((3740 -2015)==(2404 -(1071 + 62)))) then if ( not v86[v88[2]] or ((3980 -(1133 + 285))<=(2465 -(107 + 642)))) then v68=v68 + (1796 -(263 + 1532)) ;else v68=v88[8 -5 ];end else local v139=516 -(56 + 460) ;local v140;local v141;while true do if (((4421 + 13)>(8285 -(2316 + 3726))) and (v139==(1 + 0))) then for v206=v140 + (1878 -(576 + 1301)) ,v88[3 + 0 ] do v7(v141,v86[v206]);end break;end if (((522 + 3875)>(2805 -1594)) and (v139==(0 + 0))) then local v196=0;while true do if (((9650 -7514)==2136) and (v196==1)) then v139=(1 + 0) -0 ;break;end if ((v196==(0 + 0)) or ((2008 -1465)>(2551 -1834))) then v140=v88[1616 -((2247 -(45 + 1344)) + 756) ];v141=v86[v140];v196=1 + 0 ;end end end end end elseif (((3456 -(12 + (1122 -(472 + 55))))>=(75 + 937)) and (v89==(22 -12))) then v86[v88[1 + 1 ]]=v36[v88[1204 -(46 + 1155) ]];else local v144=(0 + 0) -0 ;local v145;local v146;local v147;local v148;while true do if (((19710 -14746)>(2740 + 1136 + 640)) and (v144==(1 + 0))) then v147=nil;v148=nil;v144=1321 -(1318 + 1) ;end if (((343 + 465)<=(526 + 2784)) and (v144==(1 + 1))) then while true do if (((2250 + 2567)>=(170 + 1181)) and (v145==(1823 -(1388 + 434)))) then v148=v88[3 -0 ];for v232=3 -(6 -4) ,v148 do v147[v232]=v86[v146 + v232 ];end break;end if (((1843 -933)>(1282 -(100 + 295))) and ((0 -0)==v145)) then v146=v88[2 -0 ];v147=v86[v146];v145=1 + 0 ;end end break;end if (((5434 -(458 + 584))<(479 + 4055)) and (v144==(0 + 0))) then v145=24 -(5 + 19) ;v146=nil;v144=309 -(6 + 302) ;end end end elseif ((37<=(7460 -4734)) and (v89<=(10 + 3))) then if ((v89>(239 -(113 + 114))) or ((137 + 968)==(1047 + 148))) then local v149=0 -(0 + 0) ;local v150;local v151;while true do if (((3620 -(1366 + 768))<(3438 -(149 + 549))) and (v149==(0 -0))) then v150=0 + 0 ;v151=nil;v149=1293 -(654 + 638) ;end if (((1713 -(104 + 411))>(2399 -(81 + 1020 + 519))) and (v149==(3 -2))) then while true do if (((4349 -3005)<(3607 -(348 + 439))) and (v150==(1989 -(466 + 1523)))) then v151=v88[(1195 -(533 + 653)) -7 ];v86[v151]=v86[v151](v13(v86,v151 + (956 -(584 + 371)) ,v69));break;end end break;end end else for v175=v88[2],v88[(932 + 195) -((1193 -(155 + 356)) + 442) ] do v86[v175]=nil;end end elseif ((v89==(1478 -(822 + 642))) or ((12719 -9405)>=((2411 + 9154) -6914))) then v86[v88[1426 -(1381 + 43) ]]=v37[v88[1 + 2 ]];else v86[v88[7 -5 ]]=v34(v81[v88[(1794 -772) -(852 + 167) ]],nil,v37);end elseif ((((2600 -(300 + 1236)) -470)>(120 -36)) and (v89<=(8 + 15))) then if (((2813 -(250 + 298))>=(2011 + 34)) and (v89<=(902 -(640 + 243)))) then if (((1943 -604)<(11747 -8304)) and (v89<=(15 + 1 + 1))) then if (((4271 -(1604 + 3))<=(3138 + 128)) and (v89>(70 -54))) then local v155=357 -(91 + 266) ;local v156;while true do if ((v155==(0 -0)) or ((7292 -4800)==(2022 + 622))) then v156=v88[1 + (4 -3) ];v86[v156]=v86[v156](v86[v156 + 1 ]);break;end end else v86[v88[2 -0 ]]();end elseif (((3169 -(464 + 1291))<=((2255 + 1280) -(390 + 1093))) and (v89>(66 -(8 + 40)))) then local v157=0 -0 ;local v158;local v159;while true do if (((1820 -(1152 + 89))<=(7701 -4756)) and (v157==(0 + 0 + 0))) then local v199=1138 -(998 + (255 -115)) ;while true do if ((v199==1) or ((4158 -(84 + 189))<(4998 -((1978 -(63 + 1028)) + (3535 -2752))))) then v157=1 + 0 ;break;end if ((v199==(0 -0)) or ((1099 + 2981)<=(1278 -(21 + 56)))) then v158=0 + 0 + 0 ;v159=nil;v199=2 -1 ;end end end if ((v157==(893 -(826 + 66))) or ((5112 -(233 + 65))<(6127 -3577))) then while true do if ((((4165 -2378) + 439)>=(1163 + 426)) and (v158==(1561 -(486 + 1075)))) then v159=v86[v88[371 -(331 + (914 -(485 + 393))) ]];if (((116 + 171)<=(1564 + 139)) and  not v159) then v68=v68 + ((2 -1) -0) ;else local v236=1396 -(1029 + 367) ;local v237;local v238;while true do if ((v236==((1817 -708) -(275 + (1921 -1087)))) or ((4412 -2057)<((3666 -2843) -(472 + 338)))) then v237=1528 -(810 + 718) ;v238=nil;v236=1 + 0 ;end if (((3314 + 1355)>(3395 -1529)) and (v236==(330 -(78 + 251)))) then while true do if (((0 + 0)==v237) or ((140 + 827)>(11241 -8602))) then v238=1092 -(523 + 569) ;while true do if ((v238==(0 -0)) or ((224 + 2066)==(6357 -(1737 + 28)))) then v86[v88[2]]=v159;v68=v88[11 -8 ];break;end end break;end end break;end end end break;end end break;end end elseif ((v86[v88[7 -5 ]]==v88[678 -(377 + 297) ]) or ((6363 -3885)==(4179 + 287))) then v68=v68 + 1 + 0 ;else v68=v88[1119 -((2694 -1716) + 138) ];end elseif ((v89<=(31 -10)) or ((284 + 1356)<(62 + 1261))) then if (((837 + 50)>=(1580 -(477 + 814))) and (v89==(32 -12))) then v86[v88[5 -(1280 -(853 + 424)) ]]={};else v86[v88[3 -1 ]][v88[3 + (0 -0) ]]=v88[12 -8 ];end elseif (((9187 -5366)<=(7382 -3310)) and (v89==(27 -5))) then v86[v88[2]][v88[33 -(4 + 26) ]]=v86[v88[15 -(11 + 0) ]];else do return;end end elseif ((v89<=(12 + 15)) or (((2700 -1794) + 2090)<=(6063 -3087))) then if (((13 + 50)<=(5932 -(605 + (2362 -(959 + 608))))) and (v89<=((526 -(260 + 82)) -(138 + (58 -37))))) then if (((1286 + 1515)>=((2793 -(199 + 148)) -1293)) and (v89==(43 -19))) then v86[v88[4 -2 ]]=v86[v88[8 -5 ]][v88[2 + 2 ]];elseif ((v88[1 + 1 ]==v86[v88[10 -6 ]]) or ((2809 -(320 + 882))<=(3554 -2644))) then v68=v68 + (1 -0) ;else v68=v88[6 -3 ];end elseif (((4603 -(300 + 320 + 121))>=((4485 + 3360) -(10074 -5682))) and (v89==(13 + 13))) then local v167=1981 -(516 + 1465) ;local v168;local v169;while true do if (((7892 -3608)==(7899 -3615)) and ((1 + (62 -(43 + 19)))==v167)) then while true do if ((v168==(0 -0)) or ((311 + 1915)==(4866 -(2117 -(70 + 734))))) then v169=v88[4 -2 ];v86[v169](v13(v86,v169 + (304 -(287 + 16)) ,v88[2 + 1 ]));break;end end break;end if ((((6128 -(223 + 881)) -(1217 + 309))==(1694 + 1804)) and (v167==((4249 -2637) -(54 + 1558)))) then v168=764 -(671 + 93) ;v169=nil;v167=1 + 0 ;end end elseif (v86[v88[2 -0 ]] or ((2394 -((567 -287) + 549))<=(50 + 265))) then v68=v68 + (2 -(2 -1)) ;else v68=v88[3];end elseif (((2659 + 548)>(1071 -(801 + 138))) and (v89<=(28 + 1))) then if ((v89==(42 -14)) or ((724 + (1937 -(1005 + 432)))<=(99 + 596))) then local v170=0 + 0 ;local v171;while true do if ((v170==0) or (3855<=(1889 + 1546))) then v171=v88[2];v86[v171]=v86[v171](v13(v86,v171 + 1 + 0 ,v88[9 -6 ]));break;end end else v68=v88[329 -(73 + (787 -(345 + 189))) ];end elseif ((v89<=(5 + 25)) or ((3771 -2543)>3773)) then v37[v88[3 + 0 ]]=v86[v88[5 -3 ]];elseif ((v89>(1701 -(710 + 960))) or ((6414 -(1602 + 54))==(1165 -(238 + 14)))) then local v185=0 + 0 ;local v186;local v187;while true do if (((616 -249)==(107 + 260)) and ((1 + 0)==v185)) then for v231=v186 + (545 -(291 + 253)) ,v88[981 -(713 + 264) ] do v187=v187   .. v86[v231] ;end v86[v88[6 -4 ]]=v187;break;end if ((((2772 + 684) -(75 + 177 + 525))<(4601 -(94 + 1088))) and (v185==(0 -0))) then local v212=0 -0 ;while true do if (((2878 + 363)>(3808 -(189 + 167 + 403))) and (v212==(499 -(188 + 310)))) then v185=1 + 0 ;break;end if ((v212==(1581 -(545 + 1036))) or ((5414 -(92 + 1078))<=((2678 -(234 + 232)) -945))) then v186=v88[463 -(430 + (140 -110)) ];v187=v86[v186];v212=1 + 0 ;end end end end else local v188=0 -0 ;local v189;local v190;local v191;local v192;local v193;while true do if ((v188==(513 -(14 + 499))) or ((698 + 19)>(12660 -8364))) then v189=1839 -(594 + 1245) ;v190=nil;v188=(1 + 0) -0 ;end if ((v188==2) or ((4085 -(146 + 1448))<(4923 -(4626 -(740 + 718))))) then v193=nil;while true do if (((1718 -(1078 + 639))==v189) or ((1193 -383)>=(958 + (6550 -3153)))) then local v241=0 -0 ;while true do if ((v241==(0 + 0)) or ((1843 -(1334 + 187))==(878 + 2799 + 618))) then v192=nil;v193=nil;v241=4 -3 ;end if (((13942 -9270)==(17804 -13132)) and (v241==(1 + 0))) then v189=1 + 1 ;break;end end end if (((5798 -(630 + 982))==(4949 -(208 + 555))) and (v189==0)) then v190=0 -0 ;v191=nil;v189=1 + 0 ;end if ((2581>=(763 + 381)) and (v189==(473 -(258 + 213)))) then while true do if ((((1927 + 930) -1122)>=(40 + 1154)) and ((1 + 0 + 1)==v190)) then for v281=867 -(623 + (736 -493)) ,v88[1770 -(1445 + 321) ] do local v282=(2327 -(235 + 158)) -(1405 + 529) ;local v283;local v284;while true do if ((v282==1) or ((358 + 789)>=(737 + 3735))) then while true do if (((3295 -(453 + 55 + 518))<(9409 -6062)) and (v283==(34 -(32 + 1)))) then if (((1454 + 3043)>(999 + 541)) and (v284[1 + 0 ]==(0 -0))) then v193[v281-(2 -1) ]={v86,v284[3]};else v193[v281-(68 -(63 + 4)) ]={v36,v284[1726 -(236 + 1487) ]};end v85[ #v85 + 1 + 0 ]=v193;break;end if ((v283==(0 -0)) or ((1228 + 2126)>=(5668 -(1148 + 1055)))) then local v298=1130 -(162 + 968) ;local v299;while true do if (((0 + 0)==v298) or ((4010 -((641 -(225 + 262)) + 102 + 453))==948)) then v299=0 + 0 ;while true do if (((2288 -(734 + (240 -(81 + 25))))>=68) and (v299==(0 + 0))) then local v323=766 -(204 + 562) ;while true do if ((v323==(0 + 0)) or ((1280 -(17 + 5 + 13))<=(44 -16))) then v68=v68 + (1 -0) ;v284=v80[v68];v323=1 + 0 ;end if ((v323==((292 -(55 + 236)) + 0)) or ((43 + 22 + 263)>4697)) then v299=2 -1 ;break;end end end if ((v299==(36 -(7 + 28))) or ((3515 -(397 + (1163 -716)))==(11850 -7555))) then v283=1 + 0 ;break;end end break;end end end end break;end if ((((3018 -(174 + 166)) -(644 + 425))<(6102 -4208)) and (v282==(0 -(0 -0)))) then v283=0 -0 ;v284=nil;v282=(1704 -(663 + 776)) -(146 + 118) ;end end end v86[v88[9 -7 ]]=v34(v191,v192,v37);break;end if (((4505 -(1066 + 224))<(1592 + 1796)) and (v190==(0 + 0))) then local v264=401 -((2168 -(1142 + 722)) + 97) ;local v265;while true do if (((7784 -4987)>(652 + (1982 -1236))) and (v264==(1296 -(564 + 732)))) then v265=0 + 0 ;while true do if ((v265==(1924 -(187 + 1736))) or ((12432 -8864)>(2182 + 2520))) then v190=1 + (0 -0) ;break;end if (((1999 -(1123 + 876))==v265) or ((271 + 243)<(922 -(203 + 456)))) then v191=v81[v88[7 -4 ]];v192=nil;v265=280 -(157 + 122) ;end end break;end end end if (((13194 -8687)<(6478 -(58 + 739 + 1149))) and (v190==(1 -(0 -0)))) then local v266=0 + 0 ;local v267;while true do if (((6173 -(1302 + 522))>(6646 -(15308 -11440))) and (v266==((0 + 0) -0))) then v267=0 -(0 + 0) ;while true do if (((2086 -((560 -(75 + 68)) + 1027 + 104))==(1336 -798)) and (v267==1)) then v190=2 -0 ;break;end if (((0 + 0)==v267) or ((15168 -(11488 -(156 + 95)))<=(3877 -2188))) then local v293=(0 + 0) -0 ;while true do if ((v293==(386 -(203 + 183))) or ((3632 -(1824 + (107 -42)))<=(287 + 651))) then v193={};v192=v10({},{__index=function(v312,v313)local v315=0 -0 ;local v316;local v317;while true do if ((v315==(1 + 0 + 0)) or (((5332 -2795) -(142 + 404))>=(393 + 3743))) then while true do if ((v316==(0 -0)) or ((12020 -7315)<(2607 -(249 + 484)))) then local v330=437 -(247 + (1833 -(528 + 1115))) ;local v331;while true do if ((3209>=(1888 -1118)) and (v330==(119 -(15 + 104)))) then v331=1837 -(844 + 993) ;while true do if (((959 + 944)<=(156 + 1819 + 2821)) and (v331==(899 -((1316 -659) + 242)))) then local v348=0 -0 ;while true do if ((v348==(0 -0)) or ((1314 -(1140 + 146))>=(9433 -5975))) then v317=v193[v313];return v317[1 + 0 ][v317[4 -2 ]];end end end end break;end end end end break;end if ((v315==(0 + 0)) or ((5564 -3873)<=(848 -368))) then v316=1130 -(807 + 323) ;v317=nil;v315=4 -3 ;end end end,__newindex=function(v312,v313,v314)local v318=1925 -(57 + (3838 -1970)) ;local v319;local v320;while true do if ((v318==(2 -1)) or (1145==(11673 -9233))) then while true do if ((v319==(0 + 0)) or ((3003 + 1832)<(57 -23))) then v320=v193[v313];v320[1 + 0 ][v320[2 + 0 ]]=v314;break;end end break;end if (((2450 + 2040)>(5014 -(862 + 614))) and (v318==0)) then v319=0 + 0 ;v320=nil;v318=1;end end end});v293=2 -1 ;end if ((v293==(1 -0)) or ((2014 + 914)>=(5106 -((1813 -1344) + 630 + 279)))) then v267=2 -(1017 -(918 + 98)) ;break;end end end end break;end end end end break;end end break;end if ((((2872 -(569 + 316)) -(974 + 982))<(1342 -(12 + 78 + 68))) and ((1287 -(1273 + 13))==v188)) then v191=nil;v192=nil;v188=1220 -(27 + 1191) ;end end end v68=v68 + (1435 -(1103 + 331)) ;break;end if ((v95==(0 + 0)) or ((204 + 660)>=(7557 -2782))) then v88=v80[v68];v89=v88[(71 -(63 + 5)) -2 ];v95=2 -1 ;end end end end;v67=3;end if (v67==3) then A,B=v32(v11(v72));if  not A[1] then local v96=0;local v97;while true do if (v96==0) then v97=v35[4][v68] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
