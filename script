
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==5) then v16=nil;v16=function(v20,v21,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==4) then v34=function()local v48=1363 -(1133 + 158 + 72) ;local v49;local v50;local v51;local v52;local v53;local v54;while true do if ((3 + 0)==v48) then if (v53==(163 -(100 + 17 + 46))) then if (v52==(1795 -(268 + 1527))) then return v54 * (0 -0) ;else v53=1028 -(478 + 549) ;v51=0 -0 ;end elseif (v53==(87 + 1960)) then return ((v52==(0 -(0 -0))) and (v54 * (1/(1259 -((953 -(203 + 104)) + 613))))) or (v54 * NaN) ;end return v9(v54,v53-(2370 -(943 + 404)) ) * (v51 + (v52/((6 -4)^((726 -(77 + 529)) -68)))) ;end if ((425 -(88 + (882 -(445 + 102))))==v48) then v53=v30(v50,873 -(773 + 79) ,1 + 30 );v54=((v30(v50,931 -(67 + 832) )==((390 -(346 + 43)) + 0)) and  -(1307 -(839 + (1458 -(621 + 370))))) or 1 ;v48=6 -3 ;end if (v48==((0 + 0) -(0 + 0))) then v49=v33();v50=v33();v48=1528 -(393 + 1134) ;end if (v48==(4 -3)) then v51=(1 + 3) -3 ;v52=(v30(v50,1 -0 ,43 -23 ) * ((1511 -(720 + 789))^(118 -86))) + v49 ;v48=1 + 1 ;end end end;v35=nil;v35=function(v40)local v55;if  not v40 then local v86=(962 -(164 + 798)) + 0 ;while true do if (v86==0) then v40=v33();if (v40==(0 -0)) then return "";end break;end end end v55=v4(v20,v28,(v28 + v40) -(2 -1) );v28=v28 + v40 ;local v56={};for v78=1579 -(1228 + 350) , #v55 do v56[v78]=v3(v2(v4(v55,v78,v78)));end return v7(v56);end;v27=5;end if (v27==0) then v28=1;v29=nil;v20=v5(v4(v20,5),"..",function(v41)if (v2(v41,2)==79) then v29=v1(v4(v41,1,1));return "";else local v87=0;local v88;while true do if (v87==0) then v88=v3(v1(v41,16));if v29 then local v108=v6(v88,v29);v29=nil;return v108;else return v88;end break;end end end end);v27=1;end if (1==v27) then v30=nil;v30=function(v42,v43,v44)if v44 then local v89=1643 -(403 + 1240) ;local v90;while true do if (v89==(0 -0)) then v90=(v42/((4 -2)^(v43-(1 + 0))))%((1157 -(567 + 588))^(((v44-(1 -0)) -(v43-(178 -(132 + 45)))) + (2 -1))) ;return v90-(v90%(1 + 0)) ;end end else local v91=(7 -(8 -3))^(v43-(1 + 0)) ;return (((v42%(v91 + v91))>=v91) and 1) or (0 -0) ;end end;v31=nil;v27=2;end if (v27==6) then v38=nil;v38=function()local v57=0 -0 ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if ((1 + 1)==v57) then v62=nil;v63=nil;v57=7 -4 ;end if (v57==(0 -0)) then v58=0;v59=nil;v57=1 -0 ;end if (v57==4) then while true do if (v58==3) then v65=nil;while true do local v109=277 -(217 + 60) ;local v110;local v111;while true do if (v109==0) then v110=0 -0 ;v111=nil;v109=1 + 0 ;end if (v109==(1 + 0)) then while true do if (v110==(1438 -(1359 + 79))) then v111=1696 -(1627 + 69) ;while true do if (v111==(0 -0)) then local v119=0 + 0 ;local v120;while true do if (v119==(0 -0)) then v120=529 -(35 + 494) ;while true do if (v120~=(2 -1)) then else v111=1;break;end if (v120~=(0 + 0)) then else local v144=0 -0 ;while true do if (v144==(0 + 0)) then if (v59==(1 -0)) then local v196=0;while true do if (v196~=(1981 -(947 + 1033))) then else local v217=0 -0 ;while true do if (v217==(1 + 0)) then v196=2 -0 ;break;end if (v217==0) then for v245=4 -3 ,v64 do local v246=0 -0 ;local v247;local v248;while true do if (v246==(1 + 0)) then if (v247==1) then v248=v31()~=(0 -0) ;elseif (v247==(4 -2)) then v248=v34();elseif (v247~=(7 -4)) then else v248=v35();end v65[v245]=v248;break;end if (v246==0) then local v254=1549 -(316 + 1233) ;while true do if (v254==(1079 -(499 + 579))) then v246=4 -3 ;break;end if (v254~=(0 + 0)) then else v247=v31();v248=nil;v254=1;end end end end end v63[10 -7 ]=v31();v217=48 -(33 + 14) ;end end end if ((345 -(185 + 160))==v196) then v64=v33();v65={};v196=1;end if (v196==(2 + 0)) then v59=502 -(382 + 118) ;break;end end end if (v59~=0) then else local v197=0 + 0 ;local v198;while true do if (v197~=(0 -0)) then else v198=0 -0 ;while true do if (v198~=(4 -2)) then else v59=2 -1 ;break;end if ((2 -1)~=v198) then else local v241=0;while true do if (v241~=(0 + 0)) then else v62={};v63={v60,v61,nil,v62};v241=1;end if (v241==1) then v198=2;break;end end end if ((0 + 0)==v198) then local v242=0;while true do if (1~=v242) then else v198=1;break;end if (v242==(0 + 0)) then v60={};v61={};v242=1;end end end end break;end end end v144=1;end if (v144==(1 + 0)) then v120=2 -1 ;break;end end end end break;end end end if (v111==1) then if (2~=v59) then else local v121=0 -0 ;local v122;local v123;while true do if (v121~=1) then else while true do if (v122~=(0 + 0)) then else v123=0 + 0 ;while true do local v184=0;local v185;while true do if (v184==(0 + 0)) then v185=1886 -(874 + 1012) ;while true do if (v185==(0 -0)) then if (v123==1) then local v243=1261 -(692 + 569) ;while true do if (v243~=(183 -(9 + 174))) then else for v255=1762 -(988 + 773) ,v33() do v62[v255]=v33();end return v63;end end end if (v123==0) then local v244=1878 -(1031 + 847) ;while true do if (v244~=1) then else v123=2 -1 ;break;end if (v244==(1016 -(92 + 924))) then for v257=1640 -(137 + 1502) ,v33() do local v258=0 -0 ;local v259;local v260;local v261;while true do if (v258~=0) then else v259=1825 -(1472 + 353) ;v260=nil;v258=1;end if (v258==(2 -1)) then v261=nil;while true do if (v259~=(0 -0)) then else local v285=0 -0 ;local v286;while true do if (v285==(916 -(606 + 310))) then v286=0 + 0 ;while true do if (v286~=(0 + 0)) then else v260=0 + 0 ;v261=nil;v286=4 -3 ;end if (v286==(1528 -(482 + 1045))) then v259=1 + 0 ;break;end end break;end end end if (1==v259) then while true do if (v260==0) then v261=v31();if (v30(v261,3 -2 ,210 -(166 + 43) )==0) then local v288=0 -0 ;local v289;local v290;local v291;local v292;while true do if (v288==(1717 -(830 + 885))) then while true do if (v289==3) then if (v30(v291,1352 -(856 + 493) ,3)==(1 + 0)) then v292[4]=v65[v292[1173 -(668 + 501) ]];end v60[v257]=v292;break;end if (v289==(6 -4)) then local v299=0 + 0 ;local v300;while true do if (v299==0) then v300=0 -0 ;while true do if (v300==(1 -0)) then v289=1 + 2 ;break;end if (v300==0) then if (v30(v291,1,1 + 0 )~=1) then else v292[1 + 1 ]=v65[v292[2]];end if (v30(v291,2,2 -0 )==1) then v292[2 + 1 ]=v65[v292[3]];end v300=1 -0 ;end end break;end end end if (v289==(845 -(611 + 233))) then local v301=1099 -(337 + 762) ;local v302;local v303;while true do if ((2 -1)~=v301) then else while true do if ((0 + 0)~=v302) then else v303=0 -0 ;while true do if (v303==0) then local v319=0 -0 ;local v320;while true do if (v319==(0 + 0)) then v320=1171 -(578 + 593) ;while true do if (v320~=0) then else local v323=0;while true do if (v323~=(1725 -(581 + 1143))) then else v320=1 + 0 ;break;end if (v323~=0) then else v292={v32(),v32(),nil,nil};if (v290==(0 + 0)) then local v324=1009 -(611 + 398) ;local v325;local v326;local v327;while true do if (v324==(40 -(10 + 30))) then v325=0;v326=nil;v324=679 -(439 + 239) ;end if (v324==1) then v327=nil;while true do if (v325~=(1242 -(856 + 385))) then else while true do if (v326~=(0 + 0)) then else v327=0 + 0 ;while true do if (v327==(679 -(385 + 294))) then v292[8 -5 ]=v32();v292[7 -3 ]=v32();break;end end break;end end break;end if (v325==(0 -0)) then v326=0 + 0 ;v327=nil;v325=2 -1 ;end end break;end end elseif (v290==(1 -0)) then v292[656 -(237 + 416) ]=v33();elseif (v290==(1454 -(287 + 1165))) then v292[1678 -(776 + 899) ]=v33() -((5 -3)^16) ;elseif (v290~=3) then else local v330=0;local v331;local v332;local v333;while true do if (v330==1) then v333=nil;while true do if (v331==0) then local v336=0 -0 ;while true do if (v336==(0 -0)) then v332=0 -0 ;v333=nil;v336=1 -0 ;end if (v336==1) then v331=1;break;end end end if (v331~=(2 -1)) then else while true do if (v332==(1896 -(1881 + 15))) then v333=998 -(829 + 169) ;while true do if ((1514 -(723 + 791))==v333) then v292[3]=v33() -((1826 -(381 + 1443))^16) ;v292[485 -(80 + 401) ]=v32();break;end end break;end end break;end end break;end if (v330~=(864 -(586 + 278))) then else v331=0;v332=nil;v330=1636 -(977 + 658) ;end end end v323=1 + 0 ;end end end if (v320==(3 -2)) then v303=1;break;end end break;end end end if (v303==1) then v289=5 -3 ;break;end end break;end end break;end if (v301==(0 -0)) then v302=0 -0 ;v303=nil;v301=1 + 0 ;end end end if (v289~=0) then else local v304=0 -0 ;local v305;local v306;while true do if ((1 + 0)~=v304) then else while true do if ((374 -(296 + 78))~=v305) then else v306=0 -0 ;while true do if (v306==(0 -0)) then local v321=0;while true do if (v321~=1) then else v306=1 + 0 ;break;end if (v321~=(966 -(333 + 633))) then else local v322=0 + 0 ;while true do if (v322==1) then v321=1;break;end if (v322~=0) then else v290=v30(v261,1 + 1 ,77 -(32 + 42) );v291=v30(v261,1 + 3 ,6);v322=1 -0 ;end end end end end if ((649 -(83 + 565))~=v306) then else v289=1 + 0 ;break;end end break;end end break;end if ((1264 -(970 + 294))==v304) then v305=82 -(32 + 50) ;v306=nil;v304=1;end end end end break;end if (v288~=(0 -0)) then else v289=0 -0 ;v290=nil;v288=824 -(556 + 267) ;end if (v288~=(1648 -(210 + 1437))) then else v291=nil;v292=nil;v288=2;end end end break;end end break;end end break;end end end for v262=1989 -(1467 + 521) ,v33() do v61[v262-(1272 -(112 + 1159)) ]=v38();end v244=1728 -(944 + 783) ;end end end break;end end break;end end end break;end end break;end if (v121==(539 -(213 + 326))) then v122=0;v123=nil;v121=86 -(59 + 26) ;end end end break;end end break;end end break;end end end break;end if (v58~=(0 -0)) then else v59=0;v60=nil;v58=1893 -(1717 + 175) ;end if (v58~=1) then else v61=nil;v62=nil;v58=2;end if (v58==(2 + 0)) then local v102=0 -0 ;local v103;while true do if (v102~=(0 -0)) then else v103=0 -0 ;while true do if (v103==(1 -0)) then v58=3;break;end if (v103==0) then local v116=1930 -(1631 + 299) ;while true do if (0~=v116) then else v63=nil;v64=nil;v116=1 + 0 ;end if (v116~=(2 -1)) then else v103=2 -1 ;break;end end end end break;end end end end break;end if (v57==(3 -2)) then v60=nil;v61=nil;v57=213 -(132 + 79) ;end if (v57~=(6 -3)) then else v64=nil;v65=nil;v57=8 -4 ;end end end;v39=nil;v27=7;end if (v27==7) then v39=function(v45,v46,v47)local v66=v45[1];local v67=v45[2];local v68=v45[3];return function(...)local v80=0;local v81;local v82;local v83;local v84;local v85;while true do if (v80==2) then v85=nil;v85=function()local v92=v66;local v93=v67;local v94=v68;local v95=v37;local v96={};local v97={};local v98={};for v104=0,v84 do if (((4 + 28)<(5505 -3150)) and (v104>=v94)) then v96[v104-v94 ]=v83[v104 + (1 -0) ];else v98[v104]=v83[v104 + 1 ];end end local v99=(v84-v94) + (4 -3) ;local v100;local v101;while true do local v105=0 + 0 ;local v106;while true do if ((v105==(0 + 0)) or ((5639 -2955)<=2648)) then v106=0 + 0 ;while true do if ((v106==(1583 -(61 + 1522))) or ((3639 -(234 + 1502))>(5737 -(369 + (892 -483))))) then v100=v92[v81];v101=v100[2 -1 ];v106=1 + 0 ;end if ((v106==(1 + 0)) or ((6122 -(507 + 1467))>4695)) then if ((1340<=(2995 -(767 + 858))) and (v101<=(44 -33))) then if ((v101<=5) or ((1273 + 232)>(16218 -11995))) then if ((v101<=(3 -1)) or (((2881 -(479 + 1278)) -397)>=(4206 -(510 + 1173)))) then if (((7186 -4492)<4829) and (v101<=(0 + 0))) then v98[v100[1 + 0 + 1 ]]=v98[v100[3 -0 ]];elseif ((2401>=(441 + 319)) and (v101>(1 + 0))) then v98[v100[7 -5 ]]=v46[v100[3]];else v98[v100[2 + 0 ]]=v100[2 + 1 ];end elseif (((2317 -(313 + 921))>(2094 -(257 + 1214))) and (v101<=3)) then local v126=0 + 0 ;local v127;local v128;while true do if ((4195>=(836 -666)) and (v126==(1 + 0))) then while true do if ((v127==0) or ((9945 -4966)<=(11343 -7229))) then v128=v100[2];v98[v128]=v98[v128](v14(v98,v128 + (481 -(17 + 463)) ,v100[4 -1 ]));break;end end break;end if ((v126==0) or ((2487 -1330)==(1731 + 708))) then local v179=1356 -(1278 + 78) ;while true do if ((1500>=(2175 -1137)) and ((0 -0)==v179)) then v127=0 + 0 ;v128=nil;v179=1 + 0 ;end if ((v179==(1 + 0)) or (1147<732)) then v126=(2 + 1) -2 ;break;end end end end elseif ((v101>((15 -11) + 0 + 0)) or ((10026 -5460)<(6064 -(1143 + 806)))) then local v149=0 + 0 ;local v150;local v151;while true do if ((v149==0) or ((40 + 87)<(89 + 30))) then v150=0;v151=nil;v149=1 + 0 ;end if (((1 + 0 + 0)==v149) or ((105 + 3127)<=(216 + 1386))) then while true do if ((2309<(5526 -(542 + 177))) and (v150==(0 + 0))) then v151=v100[7 -5 ];v98[v151](v14(v98,v151 + (395 -(24 + (1161 -(300 + 491)))) ,v100[7 -4 ]));break;end end break;end end else do return;end end elseif (((16931 -12440)==4491) and (v101<=(21 -13))) then if (((12589 -(5314 + 4653))<=3728) and (v101<=6)) then v98[v100[7 -5 ]][v100[3]]=v98[v100[1 + 3 ]];elseif (((735 + 67)<(2970 + (1925 -805))) and (v101>(6 + 1 + 0))) then v98[v100[585 -(417 + 166) ]]();else v98[v100[1 + 1 ]]={};end elseif ((v101<=(1520 -(885 + 626))) or ((5027 -(252 + 79))<(604 + 910))) then local v131=20 -(16 + 4) ;local v132;local v133;local v134;while true do if ((v131==(2 -1)) or (((4288 -(57 + 188)) -(104 + 898))<(1802 + 1235))) then v134=nil;while true do if ((v132==(0 + 0)) or ((155 + (1039 -(405 + 373)))>((4066 -1756) -(130 + 1478)))) then v133=v100[1 + 1 ];v134=v98[v100[3 + 0 ]];v132=1;end if ((v132==(3 -2)) or ((2934 -(477 + 271))==(2929 -(640 + 821)))) then v98[v133 + 1 + 0 + 0 ]=v134;v98[v133]=v134[v100[1461 -(1248 + 116 + 93) ]];break;end end break;end if ((v131==(0 + 0)) or ((1787 -946)>4570)) then v132=848 -(289 + 559) ;v133=nil;v131=1;end end elseif ((v101==(18 -8)) or (1236>(13430 -(10350 -(890 + 195))))) then local v153=1150 -(782 + 368) ;local v154;local v155;while true do if ((v153==(2 -1)) or ((2346 + 777)==(2302 + 2448))) then while true do if (((49 + (2424 -(692 + 776)))>632) and (v154==(0 + (0 -0)))) then v155=v100[1160 -(267 + 220 + 671) ];v98[v155]=v98[v155]();break;end end break;end if ((v153==(0 + 0)) or ((5550 -2129)<(6430 -3951))) then v154=0;v155=nil;v153=3 -2 ;end end else v98[v100[2]][v100[7 -4 ]]=v100[5 -1 ];end elseif ((v101<=17) or (((4316 -(317 + 121)) -(331 + 587))==(243 + 313))) then if ((v101<=(1439 -(1161 + 264))) or ((2566 + 1560)<=(132 + 1142))) then if ((v101<=(1478 -(106 + 1360))) or ((16088 -12721)<=389)) then v81=v100[1303 -(56 + 1244) ];elseif ((v101==(1282 -((1139 -(1003 + 64)) + 1197))) or (1784>=(7767 -4170))) then v98[v100[(1191 -(875 + 312)) -2 ]]=v98[v100[1503 -(1285 + 215) ]][v100[2 + 2 ]];elseif ((v98[v100[2 + 0 ]]==v100[4]) or (((7739 + 1873) -5216)<(7565 -(5958 -(49 + 323))))) then v81=v81 + 1 ;else v81=v100[(1 -0) + (3 -1) ];end elseif ((v101<=(1211 -(532 + 664))) or (3573<=3311)) then v98[v100[(1487 -(846 + 638)) -1 ]]=v100[4 -1 ]~=(0 -(1076 -(59 + 1017))) ;elseif (((816 + 3911)>=((4523 -1206) + 1340)) and (v101==(46 -30))) then v98[v100[(1848 -(1179 + 666)) -1 ]]=v47[v100[1 + 2 ]];else v98[v100[2 -0 ]]=v39(v93[v100[(5 -2) + 0 ]],nil,v47);end elseif (((1579 + 833)<=((1349 -713) + 2266)) and (v101<=20)) then if (((2156 -(443 + 604))<=(6992 -2757)) and (v101<=(1772 -(212 + 1542)))) then local v137=1154 -(224 + 930) ;local v138;local v139;local v140;local v141;local v142;local v143;while true do if ((2762==2762) and (v137==1)) then v140=nil;v141=nil;v137=1072 -(331 + 739) ;end if (((1 + 2)==v137) or (((7036 -(86 + 1680)) -(396 + 505))<=(5996 -3638))) then while true do if ((v138==1) or ((590 + 65)==1101)) then local v195=0 + 0 ;while true do if ((v195==(0 -0)) or ((10923 -7801)>(4327 -(7 + 3)))) then v141=nil;v142=nil;v195=376 -(106 + 31 + 238) ;end if ((v195==(955 -(439 + (1527 -1012)))) or (126==(10492 -8306))) then v138=2 + 0 ;break;end end end if (((1485 -(427 + 1058))==v138) or ((6064 -(57 + 1518))<4015)) then v139=0 + 0 ;v140=nil;v138=199 -(30 + 168) ;end if (((5805 -(1775 + 115))<=(862 + 3584)) and (v138==2)) then v143=nil;while true do if ((((1582 -(1474 + 82)) + 218)<=(14946 -11600)) and (v139==(1 + 1))) then for v218=v140,v82 do local v219=(0 -0) -0 ;local v220;local v221;while true do if ((v219==(3 -2)) or ((800 + 2456)>=(5470 -(517 + 614)))) then while true do if (((0 -0)==v220) or (((853 + 64) -(483 + 56))>=(6041 -3236))) then v221=0 -0 ;while true do if ((v221==0) or ((2984 + 985)<(687 -305))) then v143=v143 + 1 + 0 ;v98[v218]=v141[v143];break;end end break;end end break;end if (((3101 -(1474 + 403))>=((1801 -1352) + 447)) and (0==v219)) then v220=0 + 0 ;v221=nil;v219=1515 -(115 + 1399) ;end end end break;end if ((v139==(1232 -((1539 -(184 + 1084)) + 961))) or ((750 + 3509)<(373 -((336 -192) + 201)))) then local v209=518 -(509 + 9) ;local v210;while true do if ((((4785 + 694) -(361 + 1217))>=(397 + 1085)) and ((0 -0)==v209)) then v210=1349 -(184 + 1165) ;while true do if ((v210==(1232 -((3118 -2315) + 429))) or ((4686 -(13 + 11))<=(6179 -4083))) then v140=v100[(1512 -(388 + 1123)) + 1 ];v141,v142=v95(v98[v140](v14(v98,v140 + 1 + 0 ,v100[1251 -(476 + 772) ])));v210=2 -1 ;end if ((v210==(579 -(539 + 39))) or ((1939 -(880 + 249))>=(5849 -(1131 + 578)))) then v139=1 + 0 ;break;end end break;end end end if (((5310 -((1325 -(391 + 101)) + 795))>(338 + 207)) and (v139==(1 + 0))) then local v211=0;local v212;while true do if ((v211==(0 + 0)) or ((250 + 621)>(13726 -10541))) then v212=0 -0 ;while true do if ((v212==0) or ((1486 -(442 + 24))==((6261 -(445 + 1475)) -1983))) then local v250=1921 -(244 + 1677) ;while true do if ((0==v250) or ((3743 -((1190 -(1013 + 163)) + 579))==(3511 -(70 + 1724)))) then v82=(v142 + v140) -(1042 -(28 + 1013)) ;v143=(556 -(190 + 366)) -0 ;v250=1217 -(650 + 566) ;end if (((8887 -5522)<(4855 -(57 + 37 + 180))) and (v250==(2 -1))) then v212=(1372 -(1235 + 136)) + 0 ;break;end end end if ((v212==(1 -0)) or (((5129 -(812 + 505)) -(169 + 783))<=(1645 -1162))) then v139=4 -2 ;break;end end break;end end end end break;end end break;end if ((v137==2) or ((4969 -2793)==(1 + 0 + 4 + 2))) then v142=nil;v143=nil;v137=1197 -(596 + 598) ;end if ((941<3529) and (v137==(1756 -((3264 -(191 + 1475)) + 44 + 114)))) then v138=0;v139=nil;v137=1;end end elseif ((v101>(1795 -(705 + 1071))) or ((5903 -3340)>(3732 + 1199))) then local v163=248 -((745 -535) + 38) ;local v164;local v165;local v166;local v167;while true do if ((1150==(2358 -(287 + 921))) and (v163==0)) then v164=0 -0 ;v165=nil;v163=816 -(188 + 627) ;end if ((v163==1) or ((1191 -((1887 -(891 + 861)) + 73))>=(544 + 526))) then v166=nil;v167=nil;v163=2 -0 ;end if ((v163==(4 -2)) or ((596 + 1463)>=(4182 -1711))) then while true do if ((v164==0) or ((3394 -(71 + 9 + 185))<(81 + 380))) then local v202=0 -0 ;while true do if (((4160 -((533 -373) + 23))>=(4916 -(7764 -4164))) and (v202==((374 + 171) -(48 + 497)))) then v165=0 -0 ;v166=nil;v202=1 + 0 ;end if ((v202==(1902 -(66 + 1835))) or ((1215 -(159 + 70))<633)) then v164=1;break;end end end if ((((5439 -(132 + 360)) -(37 + 1420))>=(2059 -(800 + 570))) and (v164==(1 + 0 + 0))) then v167=nil;while true do if ((v165==(0 -0)) or ((3492 + 380)<=3181)) then local v222=0 + 0 ;local v223;while true do if ((v222==(0 + 0)) or ((720 -226)>((12027 -(1325 + 664)) -6638))) then v223=0 + 0 ;while true do if (((4040 -2194)==(1206 + 640)) and (v223==1)) then v165=1 -0 ;break;end if (((2381 -(653 + 242))<(3072 -(350 + 416))) and (v223==(1056 -(952 + 104)))) then local v264=681 -(661 + 20) ;while true do if (((0 + 0)==v264) or ((18054 -13248)<=(1972 + 525))) then v166=v100[7 -5 ];v167={};v264=1 -0 ;end if (((1454 + 2585)<=4083) and (v264==1)) then v223=1 -0 ;break;end end end end break;end end end if ((312<=(2501 -1432)) and (v165==1)) then for v228=1402 -(657 + 744) , #v97 do local v229=(0 -0) + 0 ;local v230;local v231;local v232;while true do if (((5171 -(53 + 286 + 416))==(5223 -(672 + 135))) and (v229==(86 -((910 -(534 + 317)) + 27)))) then v230=0;v231=nil;v229=1 + (1263 -(1182 + 81)) ;end if ((v229==(385 -(76 + 308))) or (2971>=(10585 -7037))) then v232=nil;while true do if ((v230==(241 -(83 + 157))) or ((349 + 68)>(4822 -(571 + 164)))) then while true do if (((2139 + 1551)==(8637 -4947)) and (v231==0)) then v232=v97[v228];for v278=0 + 0 , #v232 do local v279=0 -(0 -0) ;local v280;local v281;local v282;local v283;local v284;while true do if ((v279==(0 + 0)) or ((7015 -2321)<=(5421 -(43 + 847)))) then v280=0 + 0 + 0 ;v281=nil;v279=1 -(0 + 0) ;end if ((v279==((174 -(166 + 7)) -0)) or (2326<=(580 + 1055))) then v282=nil;v283=nil;v279=2 + 0 ;end if ((v279==(1220 -(892 + 326))) or ((1761 -((234 -119) + 970))>=(2223 + (1360 -(272 + 762))))) then v284=nil;while true do if (((1757 + 355)==(1270 + 842)) and ((2 -1)==v280)) then local v293=133 -(102 + 31) ;while true do if ((v293==(0 -0)) or (2255>=3087)) then v283=nil;v284=nil;v293=1;end if ((v293==(2 -1)) or ((1395 + (1700 -(51 + 301)))<=((1924 -(13 + 8)) -(130 + 150 + 5)))) then v280=2 + 0 ;break;end end end if ((390<(4974 -1856)) and (((13 -7) -4)==v280)) then while true do if ((v281==0) or ((244 + 95)==(1146 + 1395))) then local v294=0;while true do if (((2697 -(1105 + 30 + 42))>(1 + 284)) and (v294==(469 -(84 + 384)))) then v281=1 + 0 ;break;end if (((376 + 3293)>=(337 + 1705)) and (v294==(1110 -(440 + 670)))) then local v307=0 + 0 ;while true do if ((((3108 + 907) -(1491 + 323))>(1683 -522)) and (v307==(1564 -(863 + 701)))) then v282=v232[v278];v283=v282[1131 -((1474 -(40 + 439)) + 135) ];v307=1;end if (((7738 -4640)>(2575 + (569 -(60 + 491)))) and (v307==(1111 -(951 + 159)))) then v294=1;break;end end end end end if (((3782 + (2020 -1324))>(2327 -(280 + 394))) and (v281==1)) then v284=v282[2];if ((1391<=((6438 + 9334) -11587)) and (v283==v98) and (v284>=v166)) then local v296=273 -(120 + 153) ;local v297;while true do if (((1019 + 3162)>=(948 + 76)) and (v296==(0 + 0))) then v297=0 + 0 ;while true do if (((698 -435)<(6328 -((2086 -823) + 613))) and (v297==(0 -0))) then v167[v284]=v283[v284];v282[1 + 0 ]=v167;break;end end break;end end end break;end end break;end if ((v280==(0 -0)) or ((2989 -(1227 + 368))==(3751 -(972 + 168)))) then v281=0 + 0 ;v282=nil;v280=4 -(3 + 0) ;end end break;end end end break;end end break;end if (((3326 + 977)>3621) and (v230==(535 -(133 + 278 + 124)))) then local v267=0 + 0 ;while true do if ((v267==(201 -((52 -36) + 184))) or ((1549 -1213)==(6692 -(758 + 994)))) then v230=1567 -(95 + 1471) ;break;end if (((1347 + 1020)<=(8951 -5201)) and (v267==0)) then v231=0 + 0 ;v232=nil;v267=1432 -(48 + 1383) ;end end end end break;end end end break;end end break;end end break;end end else local v168=0 + 0 ;local v169;local v170;while true do if (((6142 -(1029 + 234 + 450))>2305) and (v168==((565 -(139 + 426)) + 0))) then local v186=0 + 0 ;while true do if (((2547 -652)>((3538 -1418) -(1196 + 334))) and (v186==0)) then v169=0 -0 ;v170=nil;v186=435 -(384 + 50) ;end if (((1501 + (385 -(358 + 7)))<=(787 + (3537 -1485))) and (v186==(1 -0))) then v168=1 -0 ;break;end end end if ((4256>(1833 + 2105)) and (v168==1)) then while true do if ((v169==(0 + 0)) or ((2923 -1518)>(4294 -(817 + (2349 -(1362 + 315)))))) then v170=v100[2];v98[v170]=v98[v170](v14(v98,v170 + 1 + 0 ,v82));break;end end break;end end end elseif ((v101<=(35 -13)) or (((157 -85) + 214)>(476 + 606))) then if ((v101==(1765 -(1665 + 79))) or ((9804 -7588)>4000)) then local v171=0 + 0 ;local v172;local v173;while true do if (((822 -(87 + 693 + 41))==v171) or (836>=(1071 + 704))) then while true do if (((5464 -2370)<=(8956 -5784)) and (v172==0)) then v173=v100[2];v98[v173](v98[v173 + (2 -1) ]);break;end end break;end if (((1561 + 72)==(2515 -(390 + 492))) and (v171==(658 -(525 + 133)))) then local v187=(0 -0) -0 ;while true do if ((v187==1) or (730>=(9073 -4177))) then v171=1;break;end if (((5355 -(987 + 1450))==(2481 + 437)) and (v187==0)) then v172=0 -0 ;v173=nil;v187=1;end end end end elseif (((2461 -1089)<=(5538 -(68 + 820))) and (v100[675 -(42 + 631) ]==v98[v100[4 + 0 ]])) then v81=v81 + 1 ;else v81=v100[12 -9 ];end elseif ((v101==(19 + 4)) or ((5123 -1343)==(3509 -1643))) then local v174=(0 -0) -0 ;local v175;local v176;local v177;local v178;while true do if (((4248 -(1454 + 468))==2326) and ((0 + 0)==v174)) then v175=587 -(112 + 475) ;v176=nil;v174=900 -(113 + (2772 -(1880 + 106))) ;end if (((1891 + 2066)<(5645 -(648 + 850))) and (v174==(4 -2))) then while true do if ((v175==0) or (3458>(5245 -(76 + 193)))) then local v206=0 + 0 ;while true do if ((v206==(1 + 0)) or ((3157 -1269)>(15392 -11441))) then v175=2 -1 ;break;end if ((v206==(0 -0)) or ((4420 -(8705 -6502))<=(494 -125))) then v176=v93[v100[(3 -1) + 1 ]];v177=nil;v206=1 -0 ;end end end if ((v175==(1 + (1935 -(1919 + 16)))) or (4427<(2085 -(966 + 590)))) then local v207=0 -0 ;while true do if ((v207==((571 -440) -(38 + 93))) or ((1952 -(201 + 170))>(3514 -1843))) then v178={};v177=v11({},{__index=function(v225,v226)local v233=0;local v234;local v235;while true do if (((11855 -7712)>=(12416 -(7431 + 1463))) and ((1 -0)==v233)) then while true do if (((8006 -3124)==((10283 -6582) + (5810 -4629))) and (v234==(0 + 0))) then local v268=795 -((927 -(260 + 330)) + 458) ;while true do if (((138 + 439)<(3422 -(101 + 1288))) and (v268==(0 -0))) then local v275=0 -(1966 -(327 + 1639)) ;while true do if ((v275==(0 -0)) or ((6148 -(2979 + 1293))>=(3166 -(151 + 147)))) then v235=v178[v226];return v235[1978 -(106 + 306 + 1565) ][v235[2 + 0 ]];end end end end end end break;end if (((245 + 3762)>(1844 + 472)) and (v233==(0 -0))) then v234=0 -0 ;v235=nil;v233=555 -(386 + 168) ;end end end,__newindex=function(v225,v226,v227)local v236=(3304 -(1185 + 392)) -((954 -(284 + 92)) + 1149) ;local v237;local v238;local v239;while true do if (((627 -298)<((2141 + 7496) -(4139 + 2158))) and (v236==(1 + 0))) then v239=nil;while true do if (((1964 + 2870)>(1040 + 901)) and ((0 -0)==v237)) then local v269=1671 -(1421 + 250) ;while true do if ((v269==(2 -1)) or ((7010 -(6555 -(71 + 892)))>3137)) then v237=1 + 0 ;break;end if (((17346 -13542)==(5198 -(338 + 1056))) and (v269==(0 + 0))) then v238=36 -(4 + 32) ;v239=nil;v269=1 -0 ;end end end if ((v237==(1 -(0 -0))) or ((19420 -(241 + 15188))==(1288 + 1201))) then while true do if ((v238==(0 + 0)) or ((203 + 92)>=3635)) then v239=v178[v226];v239[1 + 0 ][v239[2 + 0 ]]=v227;break;end end break;end end break;end if ((0==v236) or (563>=((9162 -(146 + 269)) -5453))) then v237=189 -((79 -33) + 143) ;v238=nil;v236=1 + 0 ;end end end});v207=4 -3 ;end if ((((7562 -4286) + 779)>(1010 + 351)) and (v207==(1 + 0))) then v175=2 + 0 ;break;end end end if ((564<(577 + 766)) and (v175==2)) then for v213=1 + 0 ,v100[8 -4 ] do local v214=0 + 0 ;local v215;local v216;while true do if ((457<=(11024 -7924)) and (v214==(0 + 0))) then v215=0 -0 ;v216=nil;v214=3 -2 ;end if ((v214==(1550 -(114 + 1435))) or ((2682 -(1389 + 153))<950)) then while true do if (((1353 -627)<(2304 -(550 + 828))) and (v215==(1 + 0))) then if (((1126 -824)==((1610 -611) -697)) and (v216[1 + 0 ]==(0 + 0))) then v178[v213-(130 -(17 + 112)) ]={v98,v216[8 -5 ]};else v178[v213-1 ]={v46,v216[4 -1 ]};end v97[ #v97 + 1 ]=v178;break;end if (((5456 -((1645 -(111 + 339)) + 479))>((5787 -4249) -1151)) and ((0 -0)==v215)) then local v252=0 + 0 ;while true do if (((102 -(93 + 3))==(5 + 1)) and (v252==(0 + 0))) then v81=v81 + 1 ;v216=v92[v81];v252=678 -(204 + 473) ;end if (((8466 -4612)>=(1977 -(95 + 2))) and ((2 -1)==v252)) then v215=3 -2 ;break;end end end end break;end end end v98[v100[292 -(44 + 246) ]]=v39(v176,v177,v47);break;end end break;end if ((v174==(1 + 0)) or (((3713 -(1692 + 54)) + 337)>3490)) then v177=nil;v178=nil;v174=1 + 1 ;end end else for v180=v100[2],v100[(1498 -(1159 + 163)) -(45 + 128) ] do v98[v180]=nil;end end v81=v81 + (620 -(11 + 608)) ;break;end end break;end end end end;v80=3;end if (v80==1) then v83={...};v84=v13("#",...) -1 ;v80=2;end if (v80==3) then A,B=v37(v12(v85));if  not A[1] then local v107=v45[4][v81] or "?" ;error("Script error at ["   .. v107   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v80==0) then v81=1;v82= -1;v80=1;end end end;end;return v39(v38(),{},v21)(...);end if (3==v27) then v33=nil;v33=function()local v69=0 -0 ;local v70;local v71;local v72;local v73;while true do if (v69==(541 -(154 + (2115 -(728 + 1001))))) then return (v73 * (53629622 -36852406)) + (v72 * (157239 -91703)) + (v71 * ((1314 -(193 + 2)) -(847 + 16))) + v70 ;end if (v69==((0 -0) -(586 -(386 + 200)))) then v70,v71,v72,v73=v2(v20,v28,v28 + (1054 -(592 + 459)) );v28=v28 + (5 -1) ;v69=2 -1 ;end end end;v34=nil;v27=4;end if (v27==2) then v31=function()local v74=975 -(515 + 460) ;local v75;while true do if (v74==(0 + 0)) then v75=v2(v20,v28,v28);v28=v28 + (105 -(60 + 44)) ;v74=2 -1 ;end if (v74==(1 + 0)) then return v75;end end end;v32=nil;v32=function()local v76,v77=v2(v20,v28,v28 + 2 );v28=v28 + 1 + 1 ;return (v77 * (583 -(217 + 110))) + v76 ;end;v27=3;end if (v27==5) then v36=v33;v37=nil;v37=function(...)return {...},v13("#",...);end;v27=6;end end end;vv10(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end
