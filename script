
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then v16=function(v20,v21,...)local v27=1;local v28;v20=v5(v4(v20,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v84=0;local v85;while true do if (v84==0) then v85=v3(v1(v29,16));if v28 then local v105=0;local v106;while true do if (v105==0) then v106=v6(v85,v28);v28=nil;v105=1;end if (v105==1) then return v106;end end else return v85;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v86=674 -(269 + 405) ;local v87;while true do if ((0 + 0)==v86) then v87=(v31/(2^(v32-(1 + 0))))%(((1939 -1122) -(452 + 47 + 316))^(((v33-((836 + 912) -(158 + 1589))) -(v32-(1 + 0))) + (2 -1))) ;return v87-(v87%(2 -1)) ;end end else local v88=(248 -(43 + 203))^(v32-(1 + 0)) ;return (((v31%(v88 + v88))>=v88) and (2 -1)) or (118 -(113 + 5)) ;end end local function v34()local v47=1162 -(976 + 186) ;local v48;while true do if (v47==(1 + 0)) then return v48;end if ((0 + 0)==v47) then v48=v2(v20,v27,v27);v27=v27 + (1 -0) ;v47=(55 + 1847) -(1165 + (3246 -2510)) ;end end end local function v35()local v49,v50=v2(v20,v27,v27 + (402 -(242 + 158)) );v27=v27 + 2 ;return (v50 * (164 + 92)) + v49 ;end local function v36()local v51=0 -0 ;local v52;local v53;local v54;local v55;while true do if (v51==(0 -0)) then v52,v53,v54,v55=v2(v20,v27,v27 + ((1194 -(26 + 1155)) -10) );v27=v27 + 4 + 0 ;v51=3 -2 ;end if (v51==(2 -1)) then return (v55 * (16778520 -(897 + 407))) + (v54 * (13824 + 51712)) + (v53 * 256) + v52 ;end end end local function v37()local v56=0 + (1886 -(527 + 1359)) ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(1453 -(772 + 678))) then if (v61==(0 -0)) then if (v60==(1379 -(1107 + 272))) then return v62 * (0 -0) ;else v61=1;v59=0 + 0 ;end elseif (v61==2047) then return ((v60==(0 + 0)) and (v62 * ((1 + 0)/(0 -0)))) or (v62 * NaN) ;end return v9(v62,v61-(2011 -988) ) * (v59 + (v60/(((128 + 47) -(126 + 47))^(30 + 22)))) ;end if (v56==((820 -(21 + 798)) + 1)) then v61=v30(v58,21,65 -(97 -63) );v62=((v30(v58,1042 -(549 + 71 + 390) )==(1 + 0)) and  -(1 -0)) or 1 ;v56=1811 -(508 + 1300) ;end if ((2 -1)==v56) then v59=1 + 0 ;v60=(v30(v58,1,1651 -(1334 + 297) ) * ((4 -2)^(1548 -(1383 + 133)))) + v57 ;v56=2 + 0 + 0 ;end if ((0 + 0)==v56) then v57=v36();v58=v36();v56=1 -0 ;end end end local function v38(v39)local v63;if  not v39 then v39=v36();if (v39==0) then return "";end end v63=v4(v20,v27,(v27 + v39) -(1 -0) );v27=v27 + v39 ;local v64={};for v76=1 + 0 , #v63 do v64[v76]=v3(v2(v4(v63,v76,v76)));end return v7(v64);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0 -0 ;local v66;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v65~=0) then else v66=0 -0 ;v67=nil;v65=1;end if (v65==(2 -1)) then v68=nil;v69=nil;v65=1333 -(1044 + 287) ;end if (v65==2) then v70=nil;v71=nil;v65=7 -4 ;end if (v65==(1138 -(1089 + 46))) then v72=nil;while true do local v89=0;local v90;while true do if (v89==(265 -(239 + 26))) then v90=0;while true do if (v90==1) then if (1~=v66) then else local v111=0;local v112;while true do if (v111~=0) then else v112=0;while true do if (v112==0) then v71=v36();v72={};v112=1;end if (1==v112) then for v127=2 -1 ,v71 do local v128=596 -(208 + 388) ;local v129;local v130;local v131;local v132;while true do if (v128~=0) then else v129=0;v130=nil;v128=1338 -(179 + 1158) ;end if (v128==(1618 -(211 + 1405))) then while true do if (v129==(34 -(4 + 29))) then v132=nil;while true do if (v130~=1) then else if (v131==1) then v132=v34()~=0 ;elseif (v131==(3 -1)) then v132=v37();elseif (v131~=3) then else v132=v38();end v72[v127]=v132;break;end if (v130==0) then local v240=0 -0 ;while true do if (v240~=0) then else v131=v34();v132=nil;v240=1;end if (v240==(927 -(898 + 28))) then v130=557 -(62 + 494) ;break;end end end end break;end if (v129==(0 + 0)) then v130=1206 -(455 + 751) ;v131=nil;v129=1;end end break;end if (v128==1) then v131=nil;v132=nil;v128=2;end end end v70[3]=v34();v112=1434 -(1106 + 326) ;end if (v112==2) then v66=2;break;end end break;end end end break;end if ((161 -(122 + 39))~=v90) then else if (v66==2) then for v115=521 -(181 + 339) ,v36() do local v116=0;local v117;local v118;local v119;while true do if (v116~=(2 -1)) then else v119=nil;while true do if (v117==1) then while true do if (v118~=(790 -(79 + 711))) then else v119=v34();if (v30(v119,714 -(161 + 552) ,1 + 0 )==(0 -0)) then local v198=0 -0 ;local v199;local v200;local v201;local v202;while true do if ((2 + 0)==v198) then while true do if (v199==0) then local v273=0;while true do if (v273==1) then v199=3 -2 ;break;end if (v273~=0) then else v200=v30(v119,1041 -(426 + 613) ,3);v201=v30(v119,4,6);v273=1;end end end if (v199~=2) then else local v274=0;while true do if (v274~=(0 -0)) then else local v290=0 + 0 ;while true do if (v290~=1) then else v274=1 + 0 ;break;end if (v290~=(0 -0)) then else if (v30(v201,1659 -(778 + 880) ,1)==1) then v202[2]=v72[v202[1803 -(1447 + 354) ]];end if (v30(v201,2,2)==1) then v202[283 -(186 + 94) ]=v72[v202[352 -(276 + 73) ]];end v290=71 -(45 + 25) ;end end end if (v274==1) then v199=1881 -(672 + 1206) ;break;end end end if (v199==(278 -(121 + 154))) then if (v30(v201,427 -(88 + 336) ,558 -(93 + 462) )==(1 + 0)) then v202[11 -7 ]=v72[v202[4]];end v67[v115]=v202;break;end if (1==v199) then local v276=0;while true do if ((0 + 0)==v276) then v202={v35(),v35(),nil,nil};if (v200==(1493 -(1322 + 171))) then local v300=0;local v301;local v302;while true do if (0~=v300) then else v301=0;v302=nil;v300=1;end if (v300~=(1 + 0)) then else while true do if (v301==(0 + 0)) then v302=0 + 0 ;while true do if (v302~=0) then else v202[14 -11 ]=v35();v202[4]=v35();break;end end break;end end break;end end elseif (v200==1) then v202[1 + 2 ]=v36();elseif (v200==2) then v202[2 + 1 ]=v36() -((1949 -(1184 + 763))^16) ;elseif (v200==3) then local v335=0;local v336;while true do if (v335~=0) then else v336=0;while true do if (v336==(0 + 0)) then v202[6 -3 ]=v36() -(2^16) ;v202[12 -8 ]=v35();break;end end break;end end end v276=1;end if (v276==(1 -0)) then v199=2 + 0 ;break;end end end end break;end if (v198==(0 + 0)) then v199=0 -0 ;v200=nil;v198=1 -0 ;end if (v198~=1) then else v201=nil;v202=nil;v198=654 -(571 + 81) ;end end end break;end end break;end if (v117~=(479 -(470 + 9))) then else v118=0 + 0 ;v119=nil;v117=1 + 0 ;end end break;end if (v116==(1362 -(481 + 881))) then v117=0 -0 ;v118=nil;v116=1 + 0 ;end end end for v120=1,v36() do v68[v120-(2 -1) ]=v42();end for v122=1,v36() do v69[v122]=v36();end return v70;end if ((0 + 0)==v66) then local v113=268 -(187 + 81) ;while true do if (v113==1) then v69={};v70={v67,v68,nil,v69};v113=376 -(180 + 194) ;end if (v113==0) then v67={};v68={};v113=1155 -(355 + 799) ;end if (2==v113) then v66=1;break;end end end v90=1 + 0 ;end end break;end end end break;end end end local function v43(v44,v45,v46)local v73=v44[1];local v74=v44[2];local v75=v44[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==3) then A,B=v41(v12(v83));if  not A[1] then local v101=v44[4][v79] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v78==2) then v83=nil;v83=function()local v91=v73;local v92=v74;local v93=v75;local v94=v41;local v95={};local v96={};local v97={};for v102=1199 -(224 + 975) ,v82 do if (((1216 -(738 + (1056 -(272 + 665))))==359) and (v102>=v93)) then v95[v102-v93 ]=v81[v102 + (2 -1) ];else v97[v102]=v81[v102 + (1738 -(1373 + (1037 -673))) ];end end local v98=(v82-v93) + (1 -(0 -0)) ;local v99;local v100;while true do local v103=965 -(328 + 637) ;local v104;while true do if ((v103==(0 + 0)) or ((5142 -((2297 -1806) + 223))<=(3040 -(286 + 374 + 1281)))) then v104=0;while true do if ((((7876 -(123 + 1727)) -(96 + 1068))>=1954) and (v104==(2 -1))) then if ((v100<=(35 -(35 -16))) or (((3203 -966) -1295)>=3479)) then if (((1684 + 401)<=(20374 -15967)) and (v100<=(951 -((2178 -1439) + 205)))) then if (((2524 + 1735)>(188 -96)) and (v100<=(8 -5))) then if (((1540 -((1015 -661) + 442))==(1785 -1041)) and (v100<=(1 -0))) then if ((1734>(2760 -(987 + 272))) and (v100>(1378 -(28 + 107 + 1243)))) then local v133=0 -0 ;local v134;local v135;local v136;while true do if (((4948 -2798)>=(1331 + 654)) and (v133==(1 + 0))) then v136=nil;while true do if ((v134==(3 -2)) or ((1396 + (772 -(272 + 373)))==4796)) then while true do if (((110 -59)<=2294) and ((99 -(39 + 60))==v135)) then v136=v99[109 -(21 + 86) ];v97[v136]=v97[v136](v14(v97,v136 + (264 -(131 + 132)) ,v99[13 -10 ]));break;end end break;end if (((3453 -(597 + 1039))>(696 -477)) and (v134==(0 -0))) then v135=0 + 0 ;v136=nil;v134=1;end end break;end if ((705<4675) and (0==v133)) then v134=0 -(0 -0) ;v135=nil;v133=751 -((1089 -(354 + 544)) + 559) ;end end else v97[v99[485 -(390 + 93) ]]=v46[v99[3]];end elseif (((2828 -((407 -311) + 423))>(1654 + 80)) and (v100==(2 + 0))) then local v139=1511 -(1209 + 302) ;local v140;local v141;local v142;local v143;while true do if (((26 + 2833)>(59 + 11)) and (v139==2)) then while true do if ((v140==1) or ((2859 -2177)==(7046 -4844))) then local v241=0;local v242;while true do if ((v241==((1090 -(699 + 391)) + 0)) or (((5468 -(36 + 142)) -3437)<(405 -(20 + 7)))) then v242=1470 -(972 + 498) ;while true do if (((467 + 1174)<(4020 -(380 + (799 -347)))) and (v242==((1125 -(521 + 602)) -1))) then v140=2;break;end if ((v242==0) or ((2804 -(557 + 1012))>(7120 -2363))) then v143={};v142=v11({},{__index=function(v295,v296)local v303=0;local v304;local v305;local v306;while true do if ((3469<(4017 -(97 + (1854 -(1256 + 349))))) and (v303==(2 -1))) then v306=nil;while true do if (((4260 -961)>(550 -200)) and (v304==(1 + 0))) then while true do if ((v305==(609 -(307 + 302))) or ((395 + 1724)>(3378 -(911 + 241)))) then local v346=0 -0 ;while true do if ((v346==(463 -(312 + (1789 -(1514 + 124))))) or ((6605 -3182)>(11338 -6775))) then local v353=0 + (400 -(57 + 343)) ;while true do if (((3166 -(826 + 487))>(1219 + 350)) and (v353==(0 -0))) then v306=v143[v296];return v306[1 + 0 ][v306[1 + 1 ]];end end end end end end break;end if (((396 + 3819)>=(114 + 247)) and (v304==(0 + 0))) then local v337=0;while true do if (((1854 + 2)==1856) and (v337==(917 -(100 + 110 + 353 + 353)))) then v304=(649 + 180) -(738 + 90) ;break;end if (((327 + 1351)>=(2386 -1711)) and (v337==(0 + 0))) then v305=252 -(45 + (1502 -(764 + 531))) ;v306=nil;v337=1;end end end end break;end if (((2597 -1498)<1522) and (v303==0)) then v304=(144 -(37 + 107)) -0 ;v305=nil;v303=1 + 0 ;end end end,__newindex=function(v295,v296,v297)local v307=0 + (825 -(753 + 72)) ;local v308;local v309;local v310;while true do if ((861<2224) and ((0 -0)==v307)) then v308=0 -0 ;v309=nil;v307=1398 -(718 + 679) ;end if (((849 + 2061)>(3780 -(295 + 1440))) and (v307==(1975 -(1487 + 487)))) then v310=nil;while true do if ((v308==((0 + 0) -0)) or ((673 + 1564)<(197 + 126))) then local v338=1870 -(1496 + 374) ;while true do if ((v338==(1508 -(200 + 1308))) or (1344>=2930)) then v309=0 + 0 ;v310=nil;v338=1 + 0 ;end if ((v338==(1 + 0 + 0)) or ((20 + 75)>=(375 + 3603))) then v308=1 -0 ;break;end end end if ((v308==(543 -(128 + 414))) or ((523 + 77)>=2261)) then while true do if ((v309==0) or ((1675 -(236 + 677))<=(1759 -1334))) then v310=v143[v296];v310[1][v310[1993 -(54 + 1937) ]]=v297;break;end end break;end end break;end end end});v242=61 -(14 + 46) ;end end break;end end end if (((3849 -(139 + 639))==(8628 -5557)) and (v140==(1 + 1))) then for v261=1 + 0 + 0 ,v99[4] do local v262=(1931 -(365 + 1566)) + 0 ;local v263;local v264;local v265;while true do if (((6659 -(248 + 1614))>=4108) and (v262==(0 + 0))) then v263=0 -0 ;v264=nil;v262=1 + 0 ;end if ((((7753 -(1262 + 72)) -2367)>((835 + 1048) -(180 + 603))) and (v262==(1 -(415 -(396 + 19))))) then v265=nil;while true do if ((1628<(4540 -(134 + 363))) and (v263==(1599 -(425 + 1173)))) then while true do if ((v264==(393 -(349 + 44))) or ((5253 -1165)<(411 + 247 + 661))) then local v323=0 + 0 ;while true do if (((1162 -(86 + 178))<(2156 + 2283)) and (v323==((912 -(371 + 109)) -(75 + 356)))) then v264=401 -(200 + 200) ;break;end if ((4062>(1055 -(65 + (240 -(23 + 31))))) and (v323==(0 -(0 -0)))) then v79=v79 + ((750 -(552 + 196)) -1) ;v265=v91[v79];v323=(3 -2) + 0 ;end end end if ((v264==((2642 -(35 + 784)) -(1176 + 646))) or ((4217 + 261)==((5979 -(578 + 632)) -(143 + 1173)))) then if (((181 + 2236)>(258 + 355 + 1695)) and (v265[2 -1 ]==18)) then v143[v261-(1 + 0) ]={v97,v265[(15 -3) -9 ]};else v143[v261-(3 -2) ]={v45,v265[9 -6 ]};end v96[ #v96 + (2 -1) ]=v143;break;end end break;end if ((v263==0) or ((1655 + 1996)<(439 + 201))) then local v311=0;while true do if ((v311==(1 -(0 + 0))) or ((6164 -(1306 + 57))<(3759 -(14 + 169)))) then v263=(2118 -616) -(472 + 1029) ;break;end if (((9466 -5007)>=((1628 + 1662) -1486)) and (v311==(1381 -(1203 + (481 -303))))) then v264=(0 + 0) -0 ;v265=nil;v311=2 -1 ;end end end end break;end end end v97[v99[5 -3 ]]=v43(v141,v142,v46);break;end if (((2998 + 1610)>(267 + 131)) and (v140==((0 + 0) -0))) then local v244=0 -0 ;local v245;while true do if (((1247 + 1249)<=(3345 -(149 + 592))) and ((0 + 0)==v244)) then v245=0;while true do if (((3676 -(612 + 485))>((2392 -(48 + 195)) -1064)) and (v245==(1 + 0))) then v140=1;break;end if (((8714 -6576)<(10530 -(7481 -(202 + 301)))) and (v245==(1081 -((431 -(144 + 239)) + 1033)))) then local v298=0 -(0 + 0) ;while true do if (((4457 -1074)>=(3150 + 94)) and (v298==(1976 -(1187 + 552 + 236)))) then v245=1;break;end if (((1612 -(911 + 27 + 4))<=(1931 + 211)) and (v298==0)) then v141=v92[v99[5 -2 ]];v142=nil;v298=4 -3 ;end end end end break;end end end end break;end if ((v139==((3 -2) + 0)) or ((2083 -(1741 -873))==(1904 -(2316 -(440 + 637))))) then local v218=(0 -0) -0 ;while true do if ((1735<(4795 -(83 + 162))) and ((525 -(342 + 182))==v218)) then v139=969 -(18 + 949) ;break;end if ((((2983 -(1506 + 151)) + 3049)>(40 + 1149)) and (v218==((1914 -323) -(1506 + 85)))) then v142=nil;v143=nil;v218=(1 -0) + 0 ;end end end if (((6695 -(702 + 1220))<4883) and (v139==(0 + 0))) then local v219=0 + 0 ;while true do if ((v219==(803 -(127 + 675))) or ((5248 -(1240 + 518))>=((15834 -(1282 + 53)) -9552))) then v139=1;break;end if ((3084>3057) and (v219==((1391 -(1301 + 90)) -0))) then v140=0;v141=nil;v219=227 -(58 + 168) ;end end end end else local v144=0 -(0 + 0) ;local v145;local v146;while true do if (((5262 -(438 + 948))>=2555) and (v144==(0 -0))) then local v220=0 -0 ;while true do if (((1182 -((1954 -1425) + 330))==(25 + 34 + (783 -519))) and (v220==(1239 -(778 + 460)))) then v144=(1363 + 450) -(811 + 1001) ;break;end if (((18716 -14771)>(1239 + 502)) and (v220==(1169 -(224 + 945)))) then v145=v99[2 + 0 ];v146=v97[v145];v220=3 -2 ;end end end if ((3834<=(10361 -5988)) and (v144==(689 -(73 + 615)))) then for v229=v145 + (372 -(116 + 255)) ,v99[3 -0 ] do v8(v146,v97[v229]);end break;end end end elseif ((4445>(4557 -(153 + 1005))) and (v100<=((605 -(353 + 249)) + 2 + 0))) then if ((v100==(3 + 1)) or ((11812 -9307)>(4619 -(776 + (2475 -(983 + 966)))))) then v97[v99[2 + 0 ]]=v97[v99[622 -(428 + 191) ]][v99[10 -6 ]];else local v149=0 -0 ;local v150;local v151;while true do if ((v149==(1 -0)) or ((878 + 153)>=(3552 -2090))) then v97[v150 + (380 -(256 + 123)) ]=v151;v97[v150]=v151[v99[4]];break;end if (((0 + 0)==v149) or ((1283 -(58 + 1 + 0))>(2766 -(167 + 290)))) then local v224=(823 -(126 + 41)) -(266 + 390) ;while true do if ((v224==1) or ((5472 -3295)>=3565)) then v149=1;break;end if (((11925 -9085)>(3621 -2671)) and (v224==0)) then v150=v99[2];v151=v97[v99[1915 -(773 + 1139) ]];v224=1500 -(451 + 388 + 660) ;end end end end end elseif ((v100>(1326 -(1162 + 158))) or (2987==3745)) then v97[v99[2 + 0 ]]=v43(v92[v99[3 -0 ]],nil,v46);else v97[v99[1662 -(56 + 1604) ]][v99[2 + 1 ]]=v99[1458 -(61 + 1393) ];end elseif ((v100<=11) or ((948 -301)>(1557 + (757 -(28 + 14))))) then if ((v100<=(352 -(129 + (2144 -(596 + 1334))))) or ((3094 + 1418)==(1876 + 559 + 510))) then if ((v100==(5 + 3)) or (1723>(6069 -((2341 -(972 + 308)) + 85)))) then local v155=0 -(0 + 0) ;local v156;local v157;local v158;while true do if ((v155==((1377 -863) -(243 + 271))) or (312==(1396 + 1300))) then v156=0 -0 ;v157=nil;v155=3 -2 ;end if (((1898 + 502)<=(126 + 3885)) and (v155==(3 -2))) then v158=nil;while true do if (((691 + 1476)<=(11846 -7533)) and (v156==1)) then while true do if ((v157==((2515 -(487 + 320)) -(244 + 1464))) or (2936>=(5764 -(43 + 896)))) then v158=v97[v99[4]];if ( not v158 or (3614<793)) then v79=v79 + (464 -(46 + 417)) ;else local v291=797 -(20 + 777) ;local v292;local v293;while true do if ((v291==(829 -(729 + 99))) or ((1423 -(1110 + 222 + 31))>(7384 -(6040 -(896 + 656))))) then while true do if (((0 + 0)==v292) or ((189 + 113)>=(2039 -((1865 -(245 + 651)) + (559 -(7 + 19)))))) then v293=0 + 0 ;while true do if ((v293==(0 + 0)) or ((580 -(294 + 273))>=(176 + 14))) then v97[v99[925 -(71 + 852) ]]=v158;v79=v99[5 -2 ];break;end end break;end end break;end if ((v291==0) or (812<(147 + 295))) then v292=(0 -0) + 0 ;v293=nil;v291=1824 -(396 + 1427) ;end end end break;end end break;end if ((v156==(791 -(541 + 250))) or (964>=991)) then local v250=0;while true do if ((v250==1) or (2718>(1802 + 2172))) then v156=1 + 0 ;break;end if ((v250==0) or ((10875 -7412)<(11358 -(25306 -16316)))) then v157=0 + 0 + 0 ;v158=nil;v250=1 + 0 ;end end end end break;end end else v97[v99[(3 -1) -0 ]]();end elseif (((2598 -(362 + 893 + 35))>=(1567 -(12 + 223 + 512))) and (v100==(8 + 2))) then local v159=0 -0 ;local v160;local v161;local v162;while true do if ((v159==(0 + (0 -0))) or (2852>=(4751 -1164))) then v160=1511 -(710 + 801) ;v161=nil;v159=1;end if (((4447 -(121 + 786))==(3256 + 284)) and (v159==(1 + 0))) then v162=nil;while true do if (((2482 + 510)>=(3136 -(468 + 430 + 69))) and ((0 -0)==v160)) then v161=v99[910 -(74 + 834) ];v162={};v160=(2426 -(1036 + 582)) -(665 + 142) ;end if (((1590 + 381)<(1915 + 995 + 891)) and (v160==((1 -0) + 0))) then for v266=1701 -(1342 + 358) , #v96 do local v267=0 + 0 ;local v268;local v269;local v270;while true do if (((0 + 0)==v267) or (1621<((1019 + 641) -1027))) then v268=(0 + 0) -0 ;v269=nil;v267=1040 -(845 + (710 -516)) ;end if ((v267==(1 -0)) or ((2760 -(1226 + 39 + 23))>3376)) then v270=nil;while true do if ((v268==(1 + 0)) or ((4781 -(1071 + 97))<=(3969 -(204 + 1737)))) then while true do if ((224==(72 + 152)) and (v269==(0 + 0))) then v270=v96[v266];for v327=(1144 -(157 + 26)) -(320 + (915 -(42 + 232))) , #v270 do local v328=(1733 -(998 + 735)) -0 ;local v329;local v330;local v331;local v332;while true do if (((4838 -(46 + 467))>=(20 + 1199)) and (v328==(45 -(22 + 21 + 0)))) then while true do if (((2318 -(494 + 824))<=(1368 + 363)) and (v329==1)) then v332=v330[2];if (((2567 + 427)<4088) and (v331==v97) and (v332>=v161)) then local v354=0 + 0 ;while true do if ((v354==(451 -(8 + 207 + 236))) or ((1603 + 3118)<(255 + 2829))) then v162[v332]=v331[v332];v330[3 -2 ]=v162;break;end end end break;end if (((550 + 1331)>(56 + 212)) and (v329==((1956 -(1612 + 344)) -(0 + 0)))) then local v350=(589 + 1006) -(983 + 612) ;while true do if ((3793==(2879 + 914)) and (v350==(1594 -(257 + 616 + 720)))) then v329=1 + 0 ;break;end if (((4776 -(323 + 133))>820) and (v350==(0 -0))) then local v355=0;while true do if ((4906>=((1150 -(598 + 299)) + 100)) and (v355==(0 -0))) then v330=v270[v327];v331=v330[(58 + 1234) -(1081 + 210) ];v355=1966 -(1375 + 590) ;end if ((v355==(2 -1)) or ((2635 -(18 + 75 + 32))<=(3722 -(1632 + 173)))) then v350=1491 -(150 + 985 + 355) ;break;end end end end end end break;end if (((3033 -(69 + 287))<=(3719 -(150 + 515))) and (v328==1)) then local v342=0 + 0 ;while true do if ((3483>(4475 -1663)) and ((1 + (0 -0))==v342)) then v328=4 -2 ;break;end if (((1420 -483)<(5116 -3306)) and (((1698 -1192) -(144 + 362))==v342)) then v331=nil;v332=nil;v342=1926 -(811 + 1114) ;end end end if ((2513>(1285 -842)) and (v328==(0 -0))) then local v343=0 + 0 ;while true do if (((5124 -(196 + (2355 -(572 + 1380))))==4525) and (v343==0)) then v329=(235 -(56 + 179)) -0 ;v330=nil;v343=1 + 0 ;end if (((868 -(55 + 812))==v343) or ((5272 -2209)<(664 + 830))) then v328=1 + 0 ;break;end end end end end break;end end break;end if (((0 + 0)==v268) or ((2803 -(608 + 95))>=(66 + 2137))) then local v312=0 -0 ;while true do if (((1102 -(179 + 922))==v312) or (1105>=(5520 -(630 + 783)))) then v268=2 -1 ;break;end if (((8401 -6238)<=(4372 -1676)) and (0==v312)) then v269=0 + 0 ;v270=nil;v312=1 -0 ;end end end end break;end end end break;end end break;end end else v97[v99[1792 -(147 + 1643) ]]=v45[v99[3]];end elseif ((861>=(528 -355)) and (v100<=(980 -(316 + 651)))) then if (((3775 -1720)>=218) and (v100>(963 -(323 + 628)))) then local v165=0 -0 ;local v166;local v167;local v168;local v169;while true do if (((6209 -(1699 + 99))>(2442 + 606)) and (v165==(313 -(233 + 78)))) then while true do if ((((3756 -(510 + 11)) -(1609 + 152))<=1579) and (v166==1)) then v169=nil;while true do if ((v167==1) or ((13070 -8626)>(921 + 3894))) then for v289=v168 + (134 -(121 + 12)) ,v99[(1031 + 386) -(206 + 1207) ] do v169=v169   .. v97[v289] ;end v97[v99[5 -3 ]]=v169;break;end if ((v167==0) or ((11348 -8350)>(4334 + 493))) then local v283=0 + 0 ;while true do if (((525 + 1161)==(966 + 720)) and ((0 -0)==v283)) then local v299=0 -0 ;while true do if ((v299==(1979 -(412 + 160 + 1406))) or ((3809 + 153)<=(165 + 71 + 464))) then v283=1 + (0 -0) ;break;end if ((v299==(1424 -(502 + 922))) or ((1476 -(59 + 644))==(457 + 1084))) then v168=v99[8 -5 ];v169=v97[v168];v299=1;end end end if ((4246>=((19038 -(1671 + 270)) -13434)) and (v283==(1 + (972 -(965 + 7))))) then v167=3 -2 ;break;end end end end break;end if ((v166==(53 -(41 + 12))) or (634<((5944 -4181) -1290))) then local v252=0 -0 ;while true do if ((((20675 -14745) -2545)>=(4632 -(306 + 1161))) and ((0 -0)==v252)) then v167=(1785 + 89) -(1743 + 131) ;v168=nil;v252=(3239 -(1249 + 5)) -(898 + 1086) ;end if (((4947 -(85 + 69))>=2289) and (v252==(1948 -(916 + 1031)))) then v166=1;break;end end end end break;end if ((v165==(1 -0)) or ((13004 -8165)<(9494 -5363))) then v168=nil;v169=nil;v165=1 + (4 -3) ;end if ((v165==(0 -0)) or ((273 + 263)==1719)) then v166=0 + 0 ;v167=nil;v165=1;end end else for v196=v99[2],v99[3 + 0 ] do v97[v196]=nil;end end elseif ((v100<=(11 + 3 + 0)) or ((426 + 1717)<=(450 + 764))) then v97[v99[2 + 0 ]][v99[1 + 2 ]]=v97[v99[3 + 1 ]];elseif ((v100==(39 -24)) or ((2503 -(2923 -1314))>=(89 + 1861))) then local v203=0 + 0 ;local v204;local v205;local v206;local v207;local v208;while true do if (((6550 -(1283 + 293))>=(251 + 1472)) and (v203==(993 -(923 + 69)))) then local v233=1436 -(819 + (1907 -1290)) ;while true do if (((455 + 285)==(604 + 127 + 9)) and (v233==(1 + (0 -0)))) then v203=785 -(716 + 67) ;break;end if ((v233==((5743 -4201) -(131 + 1411))) or ((135 + 3813)<3403)) then v206=nil;v207=nil;v233=1;end end end if ((2168==((7599 + 2841) -8272)) and (v203==(0 + 0))) then v204=0 -0 ;v205=nil;v203=1979 -(1274 + 704) ;end if (((968 -(553 + 413))==v203) or (2582<=(3910 -2195))) then v208=nil;while true do if (((538 -248)<2144) and (v204==(889 -(483 + 404)))) then for v284=v205,v80 do local v285=0 -0 ;local v286;while true do if ((v285==(0 + 0)) or ((744 -130)>(3726 + 380))) then v286=0 + 0 ;while true do if ((v286==(798 -(32 + 341 + 425))) or ((4845 -(89 + 300))==(4259 -(42 + 242)))) then v208=v208 + 1 + 0 + 0 ;v97[v284]=v206[v208];break;end end break;end end end break;end if (((1319 + 1324)>(1801 -(755 + 234))) and (v204==(1 + 0))) then local v277=0;while true do if ((v277==(1257 -(494 + 762))) or ((12805 -9529)<=(11879 -9158))) then v204=2 + 0 ;break;end if (((1163 -(298 + (74 -57)))<=(3374 -(499 + 617))) and (v277==(0 + 0))) then v80=(v207 + v205) -(578 -(262 + 315)) ;v208=0 -(0 -0) ;v277=1 + 0 ;end end end if (((4584 -2539)<(5623 -(390 + 1137))) and (v204==(0 + 0))) then local v278=0 + 0 ;while true do if ((v278==(812 -(574 + 238))) or ((8775 -5443)==(9458 -6283))) then v205=v99[(2 -0) + 0 ];v206,v207=v94(v97[v205](v97[v205 + 1 + 0 ]));v278=1 + 0 ;end if ((1413>(818 -286)) and ((1 + 0)==v278)) then v204=707 -(201 + 505) ;break;end end end end break;end end else local v209=944 -(761 + 183) ;local v210;while true do if (((43 + 7)==(33 + 17)) and (v209==0)) then v210=v99[1925 -(127 + 1796) ];v97[v210]=v97[v210]();break;end end end elseif ((v100<=(89 -65)) or ((486 + 126 + 24)>=(147 + 4471))) then if (((3854 -2426)<=(2493 + 1598)) and (v100<=(206 -(101 + 85)))) then if ((v100<=(1378 -(1318 + 42))) or ((3276 -(1180 + 215))>(1808 + 1105))) then if ((v100==((204 -150) -37)) or ((1015 -(649 + 262))>(448 + (2741 -1928)))) then v79=v99[(5 -2) -0 ];else v97[v99[1 + 1 ]]=v97[v99[3]];end elseif (((797 + 138)<=2004) and (v100==19)) then local v175=0 + 0 + 0 ;local v176;while true do if (((11194 -6366)<=(18964 -14017)) and (v175==(1999 -(1559 + 440)))) then v176=v99[2 + 0 ];v97[v176](v14(v97,v176 + (2 -1) ,v99[3 -0 ]));break;end end else v46[v99[54 -(14 + 37) ]]=v97[v99[2]];end elseif ((v100<=(11 + 11)) or (894>=(2530 -(894 + 42 + 434)))) then if ((v100>(74 -53)) or ((7089 -2760)<=(910 + 2760))) then local v179=175 -(67 + 108) ;local v180;while true do if (((1381 + 708)==(3719 -(1544 + 86))) and (v179==(205 -(92 + 113)))) then v180=v99[7 -5 ];v97[v180](v97[v180 + ((1 + 0) -0) ]);break;end end else local v181=1907 -(1074 + 833) ;local v182;local v183;while true do if (((4738 -(11 + 5 + (1956 -(792 + 555))))>2998) and (((0 -0) + 0)==v181)) then v182=0;v183=nil;v181=(700 + 174) -(270 + 603) ;end if (((4245 -2349)<=(2985 + 1371)) and (((1708 -(528 + 1179)) + 0)==v181)) then while true do if ((v182==(0 -0)) or (2683>=(4237 -1202))) then v183=v99[1 + (669 -(115 + 553)) ];v97[v183]=v97[v183](v97[v183 + (1 -0) ]);break;end end break;end end end elseif ((2823>988) and (v100==(78 -55))) then if ( not v97[v99[4 -2 ]] or ((5773 -(1692 + 1025))==(5870 -3886))) then v79=v79 + (1 -0) ;else v79=v99[(4 + 0) -(1 + 0) ];end else v97[v99[2]]={};end elseif ((((5231 -(399 + 186)) -(7 + 67))>(2281 + 1757)) and (v100<=28)) then if ((v100<=(15 + 11)) or (((3334 -(19 + 8)) -1214)>(1400 + 1225))) then if ((v100>(1191 -(757 + 409))) or (2016>=3387)) then if (((1126 + 37)<4854) and (v99[3 -1 ]==v97[v99[4]])) then v79=v79 + (1 -0) ;else v79=v99[13 -(67 -(44 + 13)) ];end elseif ((v97[v99[1873 -(660 + 1211) ]]==v99[4]) or ((13908 -10932)==(4459 -2359))) then v79=v79 + (792 -(541 + 250)) ;else v79=v99[1348 -(254 + 1091) ];end elseif (((1876 -(193 + 224))<=2742) and (v100==(22 + 5))) then v97[v99[5 -(115 -(69 + 43)) ]]=v99[6 -3 ]~=(0 -0) ;else v97[v99[1390 -(1325 + 63) ]]=v99[1 + 2 ];end elseif (((1250 -(413 + 520))<=(909 + (2490 -1112))) and (v100<=(147 -(363 -246)))) then if ((v100==(55 -26)) or ((2987 -(212 + 150))>(4226 -(1126 + 163)))) then local v188=11 -(10 + 1) ;local v189;local v190;while true do if ((2920<=(5085 -(551 + 428))) and (v188==(1 + 0))) then while true do if (((338 + 3767)>(746 -(162 + 565))) and (v189==(0 -0))) then v190=v99[2];v97[v190]=v97[v190](v14(v97,v190 + (1 -0) ,v80));break;end end break;end if ((v188==0) or ((4901 -3595)<=(3385 -2314))) then v189=0;v190=nil;v188=1 + 0 ;end end else do return;end end elseif ((622<=(4916 -(1783 + 208))) and (v100<=(1648 -(625 + 992)))) then local v191=0;local v192;local v193;local v194;local v195;while true do if ((v191==(0 -0)) or (3644==(816 + 1567))) then local v227=0 -0 ;while true do if (((0 + 0)==v227) or ((8231 -6121)<(1884 -(887 + 522)))) then v192=v99[2];v193,v194=v94(v97[v192](v14(v97,v192 + (2 -(2 -1)) ,v99[2 + 1 ])));v227=1521 -(1485 + 35) ;end if ((170<(1370 + 3428)) and (v227==1)) then v191=1 + 0 ;break;end end end if (((1 + 0 + (1429 -(1263 + 165)))==v191) or ((8555 -5445)<1091)) then for v230=v192,v80 do local v231=0;while true do if (((4468 -(346 + 197))==((34323 -24368) -6030)) and (v231==((0 -0) -0))) then v195=v195 + (1 -0) ;v97[v230]=v193[v195];break;end end end break;end if ((((9218 -(1203 + 728)) -2570)>2741) and (v191==(1196 -(399 + 796)))) then local v228=(0 + 0) -0 ;while true do if (((9794 -6039)<=4027) and (v228==(0 + 0))) then v80=(v194 + v192) -(1 + 0) ;v195=0 + 0 + 0 ;v228=2 -(2 -1) ;end if ((1147<1959) and (v228==(2 -1))) then v191=2 + 0 ;break;end end end end elseif ((2621>=(1812 -(332 + 771))) and (v100>(13 + 19))) then local v214=0;local v215;local v216;local v217;while true do if ((v214==(1755 -((2555 -1882) + 1082))) or ((3449 -(2 + 5 + 27))<=(526 -175))) then v215=v99[1881 -(1852 + 27) ];v216=v97[v215];v214=(1 + 2) -2 ;end if ((v214==(2 -1)) or ((279 + 1272)>=1939)) then v217=v99[1803 -(1027 + 773) ];for v258=2 -1 ,v217 do v216[v258]=v97[v215 + v258 ];end break;end end elseif (((4518 -(513 + 100))<(1568 + 3240)) and v97[v99[5 -3 ]]) then v79=v79 + (585 -(426 + 158)) ;else v79=v99[1 + 2 ];end v79=v79 + 1 + 0 ;break;end if ((4657>=(408 + 1909)) and (v104==(1180 -(1077 + 103)))) then local v114=0 -(589 -(195 + 394)) ;while true do if (((411 + 819)<(7354 -3771)) and (v114==(2 -1))) then v104=1;break;end if ((4612<=4696) and (v114==0)) then v99=v91[v79];v100=v99[1 -0 ];v114=1 -(0 + 0) ;end end end end break;end end end end;v78=3;end if (1==v78) then v81={...};v82=v13("#",...) -1 ;v78=2;end end end;end return v43(v42(),{},v21)(...);end;vv10(),...);break;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end end end
